[{"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\search.tsx":"1","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\App.js":"2","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Search.tsx":"3","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\reportWebVitals.js":"4","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\HeaderIconList.tsx":"5","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\MainLogo.tsx":"6","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\globalStyles.js":"7","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Header.tsx":"8","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Category.tsx":"9","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Footer.tsx":"10","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\Main.tsx":"11","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\material\\PersonalInfo.tsx":"12","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\material\\BottomImgList.tsx":"13","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\Personal.tsx":"14","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\material\\UpperImg.tsx":"15","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\Photo.tsx":"16","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\ImgDescription.tsx":"17","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\AuthorImgList.tsx":"18","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\Comment.tsx":"19","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\login\\Login.tsx":"20","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\register\\Register.tsx":"21","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\button.tsx":"22","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\index.js":"23","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\input.tsx":"24","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\userAction.ts":"25","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\index.ts":"26","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\userReducer.ts":"27","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\types.ts":"28","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\hoc\\auth.js":"29","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\upload\\PhotoUpload.tsx":"30","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\photoAction.ts":"31","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\photoReducer.ts":"32","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\PersonalModify.tsx":"33","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\personalAction.ts":"34","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Test.tsx":"35","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\config\\path.ts":"36","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\upload\\PhotoModify.tsx":"37","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\commentAction.ts":"38","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\commentReducer.ts":"39","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\PhotoRecommendBox.tsx":"40","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\search\\SearchPage.tsx":"41","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\search\\material\\SearchList.tsx":"42","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\FamousTagList.tsx":"43","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\RandomTagStyle.tsx":"44","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\LankingList.tsx":"45","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\RecentWorkList.tsx":"46","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\customMediaQuery.ts":"47","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\findPassowrd\\FindPassord.tsx":"48","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\Admin.tsx":"49","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\adminReducer.ts":"50","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\component\\data.ts":"51","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\component\\graphMaker.ts":"52","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\adminAction.ts":"53","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\component\\AdminDataList.tsx":"54"},{"size":289,"mtime":1609252102924,"results":"55","hashOfConfig":"56"},{"size":1918,"mtime":1611454533588,"results":"57","hashOfConfig":"56"},{"size":1906,"mtime":1610790737791,"results":"58","hashOfConfig":"56"},{"size":362,"mtime":1608542971129,"results":"59","hashOfConfig":"56"},{"size":6848,"mtime":1612180169188,"results":"60","hashOfConfig":"56"},{"size":737,"mtime":1610690832907,"results":"61","hashOfConfig":"56"},{"size":1313,"mtime":1610691156057,"results":"62","hashOfConfig":"56"},{"size":948,"mtime":1611456709152,"results":"63","hashOfConfig":"56"},{"size":1270,"mtime":1610809340310,"results":"64","hashOfConfig":"56"},{"size":596,"mtime":1610609933046,"results":"65","hashOfConfig":"56"},{"size":2593,"mtime":1612325480415,"results":"66","hashOfConfig":"56"},{"size":6723,"mtime":1610691727812,"results":"67","hashOfConfig":"56"},{"size":5498,"mtime":1610692499988,"results":"68","hashOfConfig":"56"},{"size":2357,"mtime":1611373431798,"results":"69","hashOfConfig":"56"},{"size":1116,"mtime":1610681115872,"results":"70","hashOfConfig":"56"},{"size":5461,"mtime":1612163691488,"results":"71","hashOfConfig":"56"},{"size":4259,"mtime":1610697745190,"results":"72","hashOfConfig":"56"},{"size":3222,"mtime":1612162644583,"results":"73","hashOfConfig":"56"},{"size":8361,"mtime":1610698025310,"results":"74","hashOfConfig":"56"},{"size":5857,"mtime":1612181196368,"results":"75","hashOfConfig":"56"},{"size":8353,"mtime":1612179980964,"results":"76","hashOfConfig":"56"},{"size":2116,"mtime":1610789219707,"results":"77","hashOfConfig":"56"},{"size":893,"mtime":1609509084501,"results":"78","hashOfConfig":"56"},{"size":1005,"mtime":1610689367867,"results":"79","hashOfConfig":"56"},{"size":4136,"mtime":1610789402532,"results":"80","hashOfConfig":"56"},{"size":315,"mtime":1611467091143,"results":"81","hashOfConfig":"56"},{"size":976,"mtime":1612069646534,"results":"82","hashOfConfig":"56"},{"size":2130,"mtime":1612160240021,"results":"83","hashOfConfig":"56"},{"size":1651,"mtime":1612069784113,"results":"84","hashOfConfig":"56"},{"size":7465,"mtime":1610807288990,"results":"85","hashOfConfig":"56"},{"size":4914,"mtime":1612172765475,"results":"86","hashOfConfig":"56"},{"size":1321,"mtime":1612069658769,"results":"87","hashOfConfig":"56"},{"size":10777,"mtime":1610692542267,"results":"88","hashOfConfig":"56"},{"size":360,"mtime":1610278170232,"results":"89","hashOfConfig":"56"},{"size":653,"mtime":1610076149521,"results":"90","hashOfConfig":"56"},{"size":108,"mtime":1610083951660,"results":"91","hashOfConfig":"56"},{"size":9016,"mtime":1610792077824,"results":"92","hashOfConfig":"56"},{"size":1130,"mtime":1610285966990,"results":"93","hashOfConfig":"56"},{"size":625,"mtime":1610287809562,"results":"94","hashOfConfig":"56"},{"size":1683,"mtime":1610697382362,"results":"95","hashOfConfig":"56"},{"size":2859,"mtime":1612161712735,"results":"96","hashOfConfig":"56"},{"size":2926,"mtime":1612162854216,"results":"97","hashOfConfig":"56"},{"size":915,"mtime":1612066978308,"results":"98","hashOfConfig":"56"},{"size":1944,"mtime":1612325600234,"results":"99","hashOfConfig":"56"},{"size":3358,"mtime":1612325647274,"results":"100","hashOfConfig":"56"},{"size":1973,"mtime":1610809124812,"results":"101","hashOfConfig":"56"},{"size":202,"mtime":1610626975620,"results":"102","hashOfConfig":"56"},{"size":7606,"mtime":1612179865883,"results":"103","hashOfConfig":"56"},{"size":8534,"mtime":1612160412817,"results":"104","hashOfConfig":"56"},{"size":276,"mtime":1611467068229,"results":"105","hashOfConfig":"56"},{"size":624,"mtime":1612084121741,"results":"106","hashOfConfig":"56"},{"size":1804,"mtime":1612079703695,"results":"107","hashOfConfig":"56"},{"size":1424,"mtime":1612160242841,"results":"108","hashOfConfig":"56"},{"size":5530,"mtime":1612160394504,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y19unq",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"165"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"165"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\search.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\App.js",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Search.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\reportWebVitals.js",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\HeaderIconList.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\MainLogo.tsx",["231"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\globalStyles.js",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Header.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Category.tsx",["232"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Footer.tsx",[],["233","234"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\Main.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\material\\PersonalInfo.tsx",["235","236","237","238"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\material\\BottomImgList.tsx",["239"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\Personal.tsx",["240","241"],"import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'globalStyles';\r\nimport Header from 'component/Header';\r\nimport UpperImg from 'page/personal/material/UpperImg';\r\nimport PersonalInfo from 'page/personal/material/PersonalInfo';\r\nimport BottomImgList from 'page/personal/material/BottomImgList';\r\nimport Footer from 'component/Footer';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { getPersonalInfo } from 'redux/actions/personalAction';\r\n\r\nconst TopLayout=styled.section`\r\n    padding: 20px 0;\r\n    border-bottom: 1px solid black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst BottomLayout=styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: #faf1f1;\r\n`;\r\n\r\nconst PageLayout=styled.section`\r\n    background: #ffffff;\r\n    display:flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nfunction Personal(){\r\n    const match = useParams<{id:string}>();\r\n    const userData = useSelector(state => state.user.auth);\r\n    const history = useHistory();\r\n    const [personalInfo, setPersonalInfo] = useState<any>(null);\r\n    const status = useSelector(state => state.photo);\r\n    \r\n    console.log(status);\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            key:match.id,\r\n        };\r\n\r\n        getPersonalInfo(body).then(\r\n            response=> {\r\n                if(response.payload.result){\r\n                    setPersonalInfo(response.payload.result);\r\n                    console.log(response.payload.result);\r\n                }\r\n            }\r\n        );\r\n\r\n    }, [status?.deletePhoto]);\r\n\r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n        <TopLayout>\r\n            <Header userData={userData} />\r\n        </TopLayout>\r\n        <BottomLayout>\r\n            <PageLayout>\r\n                {/* // 여기서부터 페이지 내용 */}\r\n                <UpperImg personalInfo={personalInfo} userData={userData} />\r\n                <PersonalInfo personalInfo={personalInfo} userData={userData} />\r\n                <BottomImgList personalInfo={personalInfo} userData={userData} />\r\n            </PageLayout>\r\n        </BottomLayout>\r\n        <Footer />\r\n        \r\n    </>);\r\n}\r\nexport default Personal;","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\material\\UpperImg.tsx",["242","243","244"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\Photo.tsx",["245","246","247"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'globalStyles';\r\nimport Header from 'component/Header';\r\nimport ImgDescription from 'page/photo/material/ImgDescription';\r\nimport AuthorImgList from 'page/photo/material/AuthorImgList';\r\nimport PhotoRecommendBox from './material/PhotoRecommendBox';\r\nimport Comment from 'page/photo/material/Comment';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { getPhotoInfo, getAuthorInfo, getIsNew, getRecommendPhoto } from 'redux/actions/photoAction';\r\nimport { SERVER_PATH } from 'config/path';\r\nimport Footer from 'component/Footer';\r\nimport { media } from 'component/customMediaQuery';\r\n\r\nconst TopLayout=styled.section`\r\n    padding: 20px 0;\r\n    border-bottom: 1px solid black;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst BottomLayout=styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: #faf1f1;\r\n`;\r\n\r\nconst PageLayout=styled.section`\r\n    background: #ffffff;\r\n    display:flex;\r\n\r\n    ${media.tablet}{\r\n        width: 600px;\r\n    }\r\n    ${media.phone}{\r\n        width: 320px;\r\n    }\r\n`;\r\n\r\n// 선택된 이미지\r\nconst PhotoBox = styled.section`\r\n    width: 820px;\r\n    height: 970px;\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${media.tablet}{\r\n        width: 480px;\r\n        height: 570px;\r\n    }\r\n\r\n    ${media.phone}{\r\n        width: 320px;\r\n        height: 320px;\r\n    }\r\n`;\r\n\r\n// 이미지 상세정보, 작가의 다른 작품, 코멘트\r\nconst PhotoBottomPage = styled.section`\r\n    width: 819px;\r\n    padding : 40px 0;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${media.tablet}{\r\n        width: 480px;\r\n    }\r\n    ${media.phone}{\r\n        width: 320px;\r\n    }\r\n`;\r\n\r\nfunction Photo(){\r\n    const match = useParams<{id:string}>();\r\n    const history = useHistory();\r\n    const userStatus = useSelector(state => state.user.auth);\r\n    const photoStatus = useSelector(state => state.photo);\r\n\r\n    const [photoInfo, setPhotoInfo] = useState<any>(null);                              // 해당 페이지 작품 정보\r\n    const [authorInfo, setauthorInfo] = useState<any>(null);                            // 해당 페이지 작품의 작가 정보\r\n    const [recommendPhotoList, setRecommendPhotoList] = useState<any>(null);            // 해당 페이지 작품의 추천리스트\r\n    const [isNew, setIsNew] = useState<boolean>(false);                                 // 작품의 New 상태 변수\r\n\r\n    useEffect(() => {\r\n        const body = {\r\n            photoId:match.id,\r\n        }\r\n\r\n        // 해당 페이지의 작품 정보를 가져온다.\r\n        getPhotoInfo(body).then(\r\n            response=> {\r\n                if(response.payload.result){\r\n                    console.log(response.payload);\r\n                    setPhotoInfo(response.payload.result);\r\n                    getAuthorInfo({key:response.payload.result.authorKey}).then(\r\n                        response=>{\r\n                            if(response.payload.success) setauthorInfo(response.payload.result);\r\n                        }\r\n                    );\r\n                }\r\n                else{\r\n                    alert('해당 페이지를 찾을 수 없습니다.');\r\n                    history.push('/');\r\n                }\r\n            }\r\n        );\r\n\r\n        // 현재 로그인한 사용자가 보고 있는 작품에 new 버튼을 클릭여부를 확인한다.\r\n        getIsNew({_id: photoInfo?._id}).then(\r\n            response=>{\r\n                setIsNew(response.payload.result);\r\n            }\r\n        );\r\n\r\n        // 현재 작품의 테그와 관련된 작품 추천 리스트를 가져온다.\r\n        getRecommendPhoto(photoInfo?._id, photoInfo?.tagList).then(\r\n            response=>{\r\n                if(response.payload.success) setRecommendPhotoList(response.payload.result);\r\n            });\r\n\r\n        \r\n\r\n    }, [isNew]);\r\n\r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n        <TopLayout>\r\n            <Header userData={userStatus}/>\r\n        </TopLayout>\r\n            {/* // 여기서부터 페이지 내용 */}\r\n        <BottomLayout>\r\n            <PageLayout >\r\n                <section style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", paddingBottom: 95}}>\r\n                    {/* 작품 이미지 */}\r\n                    <PhotoBox>\r\n                        <img style={{width: \"100%\", height: \"100%\", objectFit:\"contain\"}} src={photoInfo && `${SERVER_PATH}${photoInfo?.photoPath}`} />\r\n                    </PhotoBox>\r\n\r\n                    {/* 작품 및 작가 설명, 코멘트 */}\r\n                    <PhotoBottomPage >\r\n                        <ImgDescription authorInfo={authorInfo} photoInfo={photoInfo} setIsNew={setIsNew} isNew={isNew} />\r\n                        <AuthorImgList authorInfo={authorInfo} />\r\n                        <Comment authorInfo={authorInfo} photoInfo={photoInfo}/>\r\n                    </PhotoBottomPage>\r\n                </section>\r\n\r\n                {/* 사이드 추천작품 */}\r\n                <PhotoRecommendBox recommendPhotoList={recommendPhotoList}/>\r\n            </PageLayout>\r\n            <Footer />\r\n        </BottomLayout>\r\n    </>);\r\n}\r\nexport default Photo;","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\ImgDescription.tsx",["248","249","250"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\AuthorImgList.tsx",["251"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\Comment.tsx",["252","253"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\login\\Login.tsx",["254","255"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\register\\Register.tsx",["256","257","258"],"import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'globalStyles';\r\nimport {InputBox} from 'component/input';\r\nimport { VerifyBtn } from 'component/button';\r\nimport { getVerifiedCode, registerUser } from 'redux/actions/userAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from 'react-router-dom';\r\nimport {useHistory} from 'react-router';\r\nimport { media } from 'component/customMediaQuery';\r\nimport background from 'img/background.jpg'\r\n\r\nconst Whole=styled.section`\r\n    background-size: cover;\r\n\r\n    width: 100%;\r\n    height: 100vh;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst RegisterScreen = styled.div`\r\n    width: 508px;\r\n    height: 600px;\r\n    position: relative;\r\n\r\n    background: #FFFFFF;\r\n    border-radius: 8px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${media.phone}{\r\n        width: 310px;\r\n        height: 520px;\r\n    }\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n    position: absolute;\r\n    top: 30px;\r\n    left: 30px;\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst RegisterBox = styled.article`\r\n    width: 74%;\r\n    height: 63.3%;\r\n    padding: 90px 0 49px;\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${media.phone}{\r\n        width: 88%;\r\n        padding: 80px 0 49px;\r\n    }\r\n`;\r\n\r\nconst SiteTitle=styled.h1`\r\n    margin-bottom: 3.5rem;\r\n    font-weight: 800;\r\n    font-size: 42px;\r\n    color: #00A0FF;\r\n\r\n    ${media.phone}{\r\n        margin-bottom: 2.5rem;\r\n        font-size: 32px;\r\n    }\r\n`;\r\n\r\nconst RegisterForm=styled.form`\r\n    width: 100%;\r\n    padding: 27px 0 40px;\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    background: #daf8ff;\r\n    border-radius: 8px;\r\n`;\r\n\r\nconst initRegisterForm = {\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    authorName: \"\",\r\n};\r\n\r\nfunction Register(){\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [registerForm, setRegisterForm] = useState(initRegisterForm);\r\n\r\n    const [isVerified, setIsVerified] = useState<number>(0);        // 0: 인증 넘버 아직 수신 전 ,  1: 인증 넘버 수신 받음,  2: 인증 완료\r\n    const [verifiedCode, setVerifiedCode] = useState<string>();\r\n    const [checkVerifiedCode, setCheckVerifiedCode] = useState<string>();\r\n\r\n    const emailCheck = (email:string) => {\r\n        // 이메일 형식 여부 확인\r\n        const emailRegex = /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n        if(!emailRegex.test(email)) return false;\r\n        return true;\r\n    };\r\n\r\n    // email, password, 2차 password, authorname state 저장\r\n    const onEmailHandler = (e:any) => { setRegisterForm({...registerForm, email: e.target.value}); };\r\n    const onPasswordHandler = (e:any) => { setRegisterForm({...registerForm, password: e.target.value}); };\r\n    const onConfirmPasswordHandler = (e:any) => { setRegisterForm({...registerForm, confirmPassword: e.target.value}); };\r\n    const onAuthorNameHandler = (e:any) => { setRegisterForm({...registerForm, authorName: e.target.value});  };\r\n    const onVerifiedCodeHandler = (e:any) => { setVerifiedCode(e.target.value);  };\r\n\r\n    // 인증 번호를 보낸다.\r\n    const onSendVerifiedNumberHandler = (e:any) => { \r\n        e.preventDefault();\r\n        if(!emailCheck(registerForm.email)) return alert('이메일 형식이 아닙니다.');\r\n\r\n        setIsVerified(1);\r\n\r\n        getVerifiedCode({email: registerForm.email, str: \"회원가입\"}).then(\r\n        response=> {\r\n            if(response.payload.success) setCheckVerifiedCode(response.payload.verificationNumber.toString());\r\n        });\r\n\r\n        return alert('인증 번호가 발송되었습니다.');\r\n    };\r\n\r\n    // 이메일로 통해 받은 인증번호를 확인한다.\r\n    const onCheckVerifiedNumberHandler = (e:any) => {\r\n        e.preventDefault();\r\n\r\n        // 테스트 키\r\n        if(verifiedCode === \"9999\"){\r\n            setIsVerified(2);\r\n            return ;\r\n        }\r\n\r\n        if(checkVerifiedCode !== verifiedCode) {\r\n            setVerifiedCode(\"\");\r\n            return alert('인증 번호가 일치하지 않습니다.')\r\n        };\r\n\r\n        setIsVerified(2);       // 인증번호가 일치하면 인증확인 Txt 표시\r\n    }\r\n\r\n    // 회원가입 양식 서버로 제출\r\n    const onSubmitHandler = (e:any) => {\r\n        e.preventDefault();\r\n\r\n        if(isVerified !== 2) return alert('이메일 인증을 진행해주십시오.');\r\n        // 이메일 형식 확인\r\n        if(!emailCheck(registerForm.email)) return alert('이메일 형식이 아닙니다.');\r\n        // password 양식 확인\r\n        if(registerForm.password.length < 8) return alert('비밀번호는 최소 8자여야합니다.');\r\n        if(registerForm.password !== registerForm.confirmPassword) return alert('비밀번호와 비밀번호 확인은 같아야합니다.');\r\n\r\n        const body = {\r\n            email : registerForm.email,\r\n            password : registerForm.password,\r\n            authorName : registerForm.authorName,\r\n        };\r\n\r\n        // 서버로 회원가입 형식 보냄\r\n        registerUser(body)\r\n        .then(response => {\r\n            console.log(response);\r\n            if (response.payload.success) {\r\n                dispatch(response);\r\n                history.push(\"/login\");\r\n            } else {\r\n                // db 에러 문구에 따라 사용자에게 알림문구 출력\r\n                if(Object.keys(response.payload.err)[0] === \"email\"){\r\n                    alert(\"이미 중복된 아이디입니다.\");\r\n                }else{\r\n                    alert(\"중복된 작가 명입니다.\");\r\n                }                \r\n            }\r\n        });\r\n    };\r\n\r\n    const VerifyUI = () => {\r\n        if(isVerified === 0) {\r\n            return <VerifyBtn type=\"button\" onClick={onSendVerifiedNumberHandler}>인증번호 받기</VerifyBtn>;\r\n        }\r\n        else if(isVerified === 1) {\r\n            return  <VerifyBtn type=\"button\" onClick={onCheckVerifiedNumberHandler}>인증번호 확인</VerifyBtn>;\r\n        }\r\n        else{\r\n            return <VerifyBtn type=\"button\" >확인 완료</VerifyBtn>;\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n        <Whole style={{backgroundImage:`url(${background})`}}>\r\n            <RegisterScreen>\r\n                {/* 이전 로그인 창으로 가는 버튼 */}\r\n                <IconBox>\r\n                    <Link to=\"/login\">\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                    </Link>\r\n                </IconBox>\r\n                {/* 회원가입 input 형식 */}\r\n                <RegisterBox>\r\n                    <SiteTitle>Newone</SiteTitle>\r\n                    <RegisterForm onSubmit={onSubmitHandler}>\r\n                        <InputBox style={{width:\"80%\"}} placeholder=\"이메일\" value={registerForm.email} onChange={onEmailHandler}/>\r\n                        <div style={{display: \"flex\", width:\"80%\" }}>\r\n                            <InputBox defaultValue={\"\"} onChange={onVerifiedCodeHandler} style={{width:\"57%\"}} placeholder=\"이메일 인증번호\" />\r\n                            {VerifyUI()}\r\n                        </div>\r\n                        <InputBox style={{width:\"80%\"}} placeholder=\"비밀번호\" defaultValue={\"\"} onChange={onPasswordHandler} maxLength={16} type=\"password\"/>\r\n                        <InputBox style={{width:\"80%\"}} placeholder=\"비밀번호 확인\" defaultValue={\"\"} onChange={onConfirmPasswordHandler} maxLength={16} type=\"password\"/>\r\n                        <InputBox style={{width:\"80%\"}} placeholder=\"작가 별칭\" defaultValue={\"\"} onChange={onAuthorNameHandler} maxLength={16} />\r\n                        <VerifyBtn style={{width:\"80%\"}} type=\"submit\">회원가입</VerifyBtn>\r\n                    </RegisterForm>\r\n                </RegisterBox>\r\n            </RegisterScreen>\r\n        </Whole>\r\n    </>);\r\n}\r\nexport default Register;","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\button.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\index.js",[],["259","260"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\input.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\userAction.ts",[],["261","262"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\index.ts",[],["263","264"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\userReducer.ts",["265"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\types.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\hoc\\auth.js",["266","267"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\upload\\PhotoUpload.tsx",["268","269","270"],"import React, { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'globalStyles';\r\nimport Header from 'component/Header';\r\nimport Footer from 'component/Footer';\r\n\r\nimport { InputBox, InputParagraphBox, WhiteInputLabel } from 'component/input';\r\nimport { BlueBtn, WhiteBtn } from 'component/button';\r\nimport { addPhoto, tmpPhotoUpload } from 'redux/actions/photoAction';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { SERVER_PATH } from 'config/path';\r\n\r\nimport { \r\n    TopLayout, \r\n    BottomLayout, \r\n    PageLayout, \r\n    ImgDropDownBox, \r\n    UploadImg, \r\n    InputTxt, \r\n    TagList, \r\n    TagBox, \r\n    PhotoTypeList, \r\n    initUploadForm, \r\n    UploadFormType, \r\n    initPhotoForm, \r\n    PhotoFormType  \r\n} from './component/UploadUI';\r\n\r\nfunction PhotoUpload(){\r\n    const [uploadForm, setUploadForm] = useState<UploadFormType>(initUploadForm);\r\n    const [photoForm, setPhotoForm] = useState<PhotoFormType>(initPhotoForm);\r\n    const disPatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    // 사용자의 데이터를 가져온다.\r\n    const userData = useSelector(state => state.user.auth);\r\n    console.log(userData);\r\n\r\n    // 이미지 드롭박스 구간에서 이미지를 드롭하거나 이미지를 선택했을 때\r\n    const onDrop = useCallback(acceptedFiles => {\r\n\r\n        // 다중 파일 업로드를 위한 폼 데이터\r\n        const formData = new FormData();\r\n        const config = {\r\n            headers: { 'Content-type': 'multipart/form-data' }\r\n        };\r\n        formData.append(\"file\", acceptedFiles[0]);\r\n\r\n        // 파일 확장자를 통해, 불러온 파일이 이미지 파일인지 여부를 확인한다.\r\n        const ext = acceptedFiles[0].name.split('.')[acceptedFiles[0].name.split('.').length - 1];\r\n        if([\"jpg\", \"png\", \"jpeg\", \"svg\"].includes(ext)){\r\n            tmpPhotoUpload({formData, config}).then(\r\n                response => {\r\n                    if(response?.payload?.success) setPhotoForm({...photoForm, photoName: response.payload.fileName, photoPath: response.payload.filePath});\r\n                });\r\n        }\r\n        // 이미지 파일이 아닐 경우.\r\n        else{ return alert(\"이미지 파일을 선택해주세요.\"); }\r\n    }, []);\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\r\n    // set image title\r\n    const onTitleHandler = (e:any) => { setUploadForm({...uploadForm, title:e.target.value}); };\r\n\r\n    // set image description\r\n    const onDescriptionHandler = (e:any) => { setUploadForm({...uploadForm, description:e.target.value}); };\r\n\r\n    // set image tag\r\n    const onTagHandler = (e:any) => { setUploadForm({...uploadForm, tag:e.target.value}); };\r\n\r\n    // image 태그 추가 핸들러\r\n    const addTagHandler = (e:any) => {\r\n        // enter 입력시 태그 등록\r\n        if(e.key === \"Enter\"){\r\n            e.preventDefault();\r\n            if(uploadForm.tag === \"\") return alert(\"태그를 입력해주세요\");\r\n            setUploadForm({ ...uploadForm, tag:\"\", tagList: [...uploadForm.tagList, uploadForm.tag] });\r\n        }\r\n    };\r\n\r\n    // set image type\r\n    const onPhotoTypeHandler = (e:any, _type: number) =>{\r\n        e.preventDefault();\r\n        setUploadForm({ ...uploadForm, photoType:_type });\r\n    };\r\n\r\n    // 서버로 이미지 폼 전송\r\n    const onPhotoSubmit = (e:any) => {\r\n        e.preventDefault();\r\n        // 폼 미작성 부분 확인\r\n        if(uploadForm.title === \"\") return alert(\"타이틀을 입력해주세요\");\r\n        if(photoForm.photoName === \"\") return alert(\"이미지를 넣어주세요.\");\r\n        if(uploadForm.photoType === 4) return alert(\"포토 타입을 클릭해서 정해주세요.\");\r\n\r\n        const body = {\r\n            title : uploadForm.title,\r\n            description : uploadForm.description,\r\n            tagList : uploadForm.tagList,\r\n            photoName : photoForm.photoName,\r\n            photoPath : photoForm.photoPath,\r\n            photoType : uploadForm.photoType,\r\n        };\r\n        addPhoto(body).then(\r\n            response => {\r\n                console.log(response);\r\n                if(response.payload.success){\r\n                    // 서버로 전송 성공 시, 개인 페이지로 이동\r\n                    disPatch(response);\r\n                    history.push(`/personal/${userData.key}`);\r\n                } else {\r\n                    alert(\"DB 저장에 실패했습니다.\")\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n        <TopLayout>\r\n            <Header userData={userData}/>\r\n        </TopLayout>\r\n\r\n        {/* 여기서부터 해당 페이지 내용 */}\r\n        <BottomLayout>\r\n            <PageLayout>\r\n                {/* 이미지 가져오는 부분 */}\r\n                <ImgDropDownBox {...getRootProps()} >\r\n                    <input {...getInputProps()} />\r\n                    {photoForm.photoPath !== \"\" ? <UploadImg\r\n                                src={`${SERVER_PATH}${photoForm.photoPath}` }/> : <p style={{zIndex: 3}}> 클릭하거나 이미지를 끌어와 주세요 </p>}\r\n                </ImgDropDownBox>\r\n                \r\n                {/* 이미지 등록 양식 란 */}\r\n                <form onSubmit={onPhotoSubmit} style={{ display:'flex', flexDirection: 'column' }}>\r\n                    <WhiteInputLabel>Title</WhiteInputLabel>\r\n                    <InputBox style={{ width: \"100%\"}} placeholder=\"작품의 제목을 입력해주세요.\" defaultValue={uploadForm.title} onChange={onTitleHandler} maxLength={20}/>\r\n\r\n                    <WhiteInputLabel>Description</WhiteInputLabel>\r\n                    <InputParagraphBox placeholder=\"작품을 간단히 설명해주세요.\" defaultValue={uploadForm.description} onChange={onDescriptionHandler} maxLength={80}/>\r\n\r\n                    <WhiteInputLabel>Tag</WhiteInputLabel>\r\n                    <TagList>\r\n                        <InputBox \r\n                        defaultValue={uploadForm.tag} onChange={onTagHandler} \r\n                        style={{ marginBottom: 0, width: 100, display:\"flex\", justifyContent:\"center\", fontSize:12}} \r\n                        placeholder=\"# 태그 입력\" \r\n                        maxLength={10}\r\n                        onKeyPress={addTagHandler}/>\r\n                        { \r\n                            uploadForm.tagList.map( (tag, index)=> (<TagBox key={index}>{`# ${tag}`}</TagBox>) )\r\n                        }\r\n                    </TagList>\r\n\r\n                    <InputTxt>PHOTO TYPE</InputTxt>\r\n                    <PhotoTypeList>\r\n                        <WhiteBtn isClicked={uploadForm.photoType===0} onClick={(e)=>{onPhotoTypeHandler(e, 0);}}>일러스트</WhiteBtn>\r\n                        <WhiteBtn isClicked={uploadForm.photoType===1} onClick={(e)=>{onPhotoTypeHandler(e, 1);}}>만화</WhiteBtn>\r\n                        <WhiteBtn isClicked={uploadForm.photoType===2} onClick={(e)=>{onPhotoTypeHandler(e, 2);}}>캘리그라피</WhiteBtn>\r\n                    </PhotoTypeList>\r\n                    \r\n                    <BlueBtn type=\"submit\" style={{ marginTop: 54, width: \"100%\"}}>작품 등록</BlueBtn>\r\n                </form>\r\n            </PageLayout>\r\n        </BottomLayout>\r\n        <Footer />\r\n    </>);\r\n}\r\nexport default PhotoUpload;","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\photoAction.ts",["271"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\photoReducer.ts",["272"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\PersonalModify.tsx",["273","274","275","276","277","278"],"import React, {useEffect, useCallback, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'globalStyles';\r\nimport Header from 'component/Header';\r\nimport Category from 'component/Category';\r\n\r\nimport Footer from 'component/Footer';\r\nimport { useSelector } from 'react-redux';\r\nimport { SERVER_PATH } from 'config/path';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { InputBox, WhiteInputLabel, InputParagraphBox } from 'component/input';\r\nimport { BlueBtn } from 'component/button';\r\n\r\nimport { faCamera } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport defaultImg from 'img/defaultPersonalImg.png';\r\nimport { modifiedPersonalInfo } from 'redux/actions/userAction';\r\nimport { media } from 'component/customMediaQuery';\r\n\r\n\r\nconst TopLayout=styled.section`\r\n    padding: 20px 0;\r\n    border-bottom: 1px solid black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n`;\r\n\r\nconst BottomLayout=styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: #faf1f1;\r\n`;\r\n\r\nconst PageLayout=styled.form`\r\n    /* background: #ffffff; */\r\n    display:flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst UpperImgDropDownBox = styled.section`\r\n    width: 1000px;\r\n    height: 452px;\r\n    position:relative;\r\n\r\n    background: #C4C4C4;\r\n\r\n    line-height: 800px;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    ${media.tablet}{\r\n        width: 600px;\r\n        height: 300px;\r\n    }\r\n\r\n    ${media.phone}{\r\n        width: 320px;\r\n        height: 200px;\r\n    }\r\n`;\r\n\r\nconst PersonalImgBox = styled.article`\r\n    position: relative;\r\n    height: 150px;\r\n    width: 150px;\r\n    margin-top: 50px;\r\n    font-size: 2.2rem;\r\n\r\n    ${media.tablet}{\r\n        width: 130px;\r\n        height: 130px;\r\n    }\r\n\r\n    ${media.phone}{\r\n        width: 90px;\r\n        height: 90px;\r\n    }\r\n`;\r\n\r\nconst PersonalImg = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    /* margin-right: 44px; */\r\n\r\n    border-radius: 75px;\r\n\r\n    object-fit: 'contain';\r\n    cursor: pointer;\r\n`;\r\n\r\nfunction PersonalModify(){\r\n\r\n    const userData = useSelector(state => state.user.auth);\r\n    // upper : 개인페이지 상단 이미지 경로, personal: 개인 페이지 160 x 160 원형 이미지 경로\r\n    const [upperPhoto, setUpperPhoto] = useState<{path:String, name:String}>({path:\"\", name:\"\"});\r\n    const [preUpperPhoto, setPreUpperPhoto] = useState<{path:String, name:String}>({path:\"\", name:\"\"});\r\n\r\n    const [personalPhoto, setPersonalPhoto] = useState<{path:String, name:String}>({path:\"\", name:\"\"});\r\n    const [prePersonalPhoto, setPrePersonalPhoto] = useState<{path:String, name:String}>({path:\"\", name:\"\"});\r\n    \r\n    const [authorName, setAuthorName] = useState(\"\");\r\n    const [instruction, setInstruction] = useState(\"\");\r\n    const [homepage, setHomepage] = useState(\"\");\r\n    const [twitter, setTwitter] = useState(\"\");\r\n\r\n\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        setAuthorName(userData?.authorName);\r\n        setInstruction(userData?.instruction);\r\n        setHomepage(userData?.homepage);\r\n        setTwitter(userData?.twitter);\r\n\r\n        setUpperPhoto({path:userData?.upperImgPath, name:userData?.upperImgName});\r\n        setPreUpperPhoto({path:userData?.upperImgPath, name:userData?.upperImgName});\r\n        setPersonalPhoto({path:userData?.personalImgPath, name:userData?.personalImgName});\r\n        setPrePersonalPhoto({path:userData?.personalImgPath, name:userData?.personalImgName});\r\n    }, [])\r\n    \r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n\r\n        const formData = new FormData();\r\n        const config = {\r\n            headers: { 'Content-type': 'multipart/form-data' }\r\n        };\r\n        formData.append(\"file\", acceptedFiles[0]);\r\n\r\n        // 파일 확장자를 통해, 불러온 파일이 이미지 파일인지 여부를 확인한다.\r\n        const ext = acceptedFiles[0].name.split('.')[acceptedFiles[0].name.split('.').length - 1];\r\n        if([\"jpg\", \"png\", \"jpeg\", \"svg\"].includes(ext)){\r\n\r\n            // 서버로 이미지 임시 저장\r\n            axios.post('/api/photo/upload', formData, config)\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    // 임시 이미지가 저장 되면 이미지 이름과 서버 임시 path를 set함\r\n                    setUpperPhoto({...upperPhoto, path:response.data.filePath, name:response.data.fileName});\r\n                }\r\n            })\r\n            .catch(e => console.log(e));\r\n        }\r\n        else{\r\n            // 이미지 파일이 아닐 경우.\r\n            console.log(ext);\r\n            return alert(\"이미지 파일을 선택해주세요.\");\r\n        }\r\n    }, []);\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\r\n\r\n    // set user author name \r\n    const onAuthorNameHandler = (e:any) => { setAuthorName(e.target.value); };\r\n\r\n    // set user instruction\r\n    const onInstructionHandler = (e:any) => { setInstruction(e.target.value); };\r\n\r\n    // set user personal home page\r\n    const onHompageHandler = (e:any) => { setHomepage(e.target.value); };\r\n\r\n    // set user twitter page\r\n    const onTwitterHandler = (e:any) => { setTwitter(e.target.value); };\r\n\r\n    const onPersonalImgHandler = (e:any) => {\r\n        const fileData = e.target.files[0];\r\n        const formData = new FormData();\r\n        const config = {\r\n            headers: { 'Content-type': 'multipart/form-data' }\r\n        };\r\n        formData.append(\"file\", fileData);\r\n\r\n        // 파일 확장자를 통해, 불러온 파일이 이미지 파일인지 여부를 확인한다.\r\n        const ext = fileData.name.split('.')[fileData.name.split('.').length - 1];\r\n        if([\"jpg\", \"png\", \"jpeg\", \"svg\"].includes(ext)){\r\n\r\n            // 서버로 이미지 임시 저장\r\n            axios.post('/api/photo/upload', formData, config)\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    // 임시 이미지가 저장 되면 이미지 이름과 서버 임시 path를 set함\r\n                    setPersonalPhoto({...personalPhoto, path:response.data.filePath, name:response.data.fileName});\r\n                }\r\n            })\r\n            .catch(e => console.log(e));\r\n        }\r\n        else{\r\n            // 이미지 파일이 아닐 경우.\r\n            console.log(ext);\r\n            return alert(\"이미지 파일을 선택해주세요.\");\r\n        }\r\n    };\r\n\r\n    const onPersonalDataSubmit = (e:any) => {\r\n        e.preventDefault();\r\n\r\n        if(!authorName) return alert(\"작가 명을 입력해주세요.\");\r\n        if(authorName.length < 2) return alert(\"작가 명은 2글자 이상입니다.\");\r\n\r\n        // 서버로 보낼 데이터\r\n        const body = {\r\n            authorName,\r\n            instruction,\r\n            upperPhoto,\r\n            preUpperPhoto,\r\n            personalPhoto,\r\n            prePersonalPhoto,\r\n            twitter,\r\n            homepage,\r\n        };\r\n\r\n        modifiedPersonalInfo(body).then(\r\n            response => {\r\n                // 데이터 변경 사항이 success 되면 개인 페이지로 이동\r\n                console.log(response.payload);\r\n                if(response.payload.success){\r\n                    history.push(`/personal/${userData.key}`);\r\n                }else{\r\n                    alert(\"작가명이 중복됩니다.\");\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const personalImg = () => {\r\n        if(personalPhoto?.path){\r\n            // 사용자가 이미지를 변경했다면\r\n            return `${SERVER_PATH}${personalPhoto?.path}`;\r\n        }\r\n        else{\r\n            // 사용자가 이미지를 변경하지 않았거나 default 값일 경우\r\n            return !personalPhoto?.path ? defaultImg : `${SERVER_PATH}${personalPhoto?.path}`;\r\n        }\r\n    };\r\n\r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n        <TopLayout>\r\n            <Header userData={userData}/>\r\n        </TopLayout>\r\n        <BottomLayout>\r\n            <PageLayout onSubmit={onPersonalDataSubmit}>\r\n                {/* // 여기서부터 페이지 내용 */}\r\n                {/* 상단 이미지 drop box 영역 */}\r\n                <UpperImgDropDownBox {...getRootProps()}>\r\n                    <input defaultValue={undefined} style={{width: '100%', height: '100%'}} {...getInputProps()} />\r\n                    {upperPhoto?.path ? \r\n                    <img style={{ position:'absolute', top:0, left:0, width: '100%', height: '100%', objectFit: 'contain', zIndex:5}} src={`${SERVER_PATH}${upperPhoto?.path}` }/> :\r\n                    <p style={{position:'absolute', top:0, left:0, zIndex: 7, width: '100%', height: '100%'}}> 클릭하거나 이미지를 끌어와 주세요 </p>}\r\n                </UpperImgDropDownBox>\r\n\r\n                {/* Personal Img 변경 영역 */}\r\n                <PersonalImgBox >\r\n                    <PersonalImg src={personalImg() } />\r\n                    <FontAwesomeIcon style={{ position:'absolute', right:0, bottom: 0, zIndex:3, color:\"#00A0FF\" }} icon={faCamera}/>\r\n                    <label style={{position:'absolute', width: \"100%\", height: \"100%\", top:0, left:0, zIndex:5, borderRadius: 75, cursor:\"pointer\"}}>\r\n                        <input \r\n                        style={{opacity: 0}} \r\n                        type=\"file\" \r\n                        accept=\"image/png, image/jpeg, image/jpg, image/svg\" \r\n                        onChange={onPersonalImgHandler}/>\r\n                    </label>\r\n                </PersonalImgBox>\r\n\r\n                <WhiteInputLabel>작가 명</WhiteInputLabel>\r\n                <InputBox value={authorName} onChange={onAuthorNameHandler} maxLength={16}/>\r\n\r\n                <WhiteInputLabel>개인 홈페이지 주소</WhiteInputLabel>\r\n                <InputBox value={homepage} onChange={onHompageHandler} maxLength={50}/>\r\n\r\n                <WhiteInputLabel>트위터 주소</WhiteInputLabel>\r\n                <InputBox value={twitter} onChange={onTwitterHandler} maxLength={50}/>\r\n\r\n                <WhiteInputLabel>자기 소개</WhiteInputLabel>\r\n                <InputParagraphBox value={instruction} onChange={onInstructionHandler} maxLength={120}/>\r\n\r\n                <BlueBtn type=\"submit\" style={{ margin:\"60px 0px\", width: \"99%\" }}> 수정 완료 </BlueBtn>                \r\n            </PageLayout>\r\n        </BottomLayout>\r\n        <Footer />\r\n        \r\n    </>);\r\n}\r\nexport default PersonalModify;","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\personalAction.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Test.tsx",["279"],"import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport GlobalStyle from 'globalStyles';\r\n\r\nconst Whole=styled.section``;\r\n\r\nconst Child =styled.div`\r\n    width: 100px;\r\n    height: 100px;\r\n    border: 1px solid white;\r\n`;\r\n\r\nconst Parent = styled.div`\r\n    width: 500px;\r\n    height: 500px;\r\n    background: blue;\r\n    &:hover &>div {\r\n        background: red;\r\n    };\r\n`;\r\n\r\n\r\n\r\nfunction Test(){\r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n        <Whole>\r\n            <Parent>\r\n                <Child></Child>\r\n                <Child></Child>\r\n            </Parent>\r\n        </Whole>\r\n    </>);\r\n}\r\nexport default Test;",["280","281"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\config\\path.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\upload\\PhotoModify.tsx",["282","283","284"],"import React, { useState, useCallback, useEffect } from 'react';\r\nimport GlobalStyle from 'globalStyles';\r\nimport Header from 'component/Header';\r\nimport { InputBox, InputParagraphBox, WhiteInputLabel } from 'component/input';\r\nimport { BlueBtn, WhiteBtn } from 'component/button';\r\nimport { tmpPhotoDelete, tmpPhotoUpload, getPhotoInfo, modifyPhoto } from 'redux/actions/photoAction';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { SERVER_PATH } from 'config/path';\r\nimport Footer from 'component/Footer';\r\nimport { \r\n    TopLayout, \r\n    BottomLayout, \r\n    PageLayout, \r\n    ImgDropDownBox, \r\n    UploadImg, \r\n    InputTxt, \r\n    TagList, \r\n    TagBox, \r\n    PhotoTypeList, \r\n    initUploadForm, \r\n    UploadFormType, \r\n    initPhotoForm, \r\n    PhotoFormType  \r\n} from './component/UploadUI';\r\n\r\nfunction PhotoModify(){\r\n    const [uploadForm, setUploadForm] = useState<UploadFormType>(initUploadForm);\r\n    const [photoForm, setPhotoForm] = useState<PhotoFormType>(initPhotoForm);\r\n\r\n    const [isPhotoChange, setIsPhotoChange] = useState<boolean>(false);\r\n    const disPatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    // 사용자의 데이터를 가져온다.\r\n    const userData = useSelector(state => state.user.auth);\r\n    const photoData = useSelector(state => state.photo.modifyPhoto);\r\n\r\n    useEffect(() => {\r\n        // 수정할 photo info를 가져옴\r\n        getPhotoInfo({photoId:photoData?.id}).then(\r\n            response => {\r\n                const photoInfo = response.payload;\r\n                const result = photoInfo.result;\r\n\r\n                if(photoInfo.success){\r\n                    setUploadForm({ ...uploadForm, \r\n                        title: result.title,\r\n                        tagList: result.tagList,\r\n                        description: result.description,\r\n                        photoType: result.photoType,\r\n                    });\r\n                    setPhotoForm({...photoForm,\r\n                            photoPath: result.photoPath,\r\n                            photoName: result.photoName,\r\n                        });\r\n                }\r\n            })\r\n    }, []);\r\n\r\n    // 이미지 드롭박스 구간에서 이미지를 드롭하거나 이미지를 선택했을 때\r\n    const onDrop = useCallback(acceptedFiles => {\r\n\r\n        // 다중 파일 업로드를 위한 폼 데이터\r\n        const formData = new FormData();\r\n        const config = {\r\n            headers: { 'Content-type': 'multipart/form-data' }\r\n        };\r\n        formData.append(\"file\", acceptedFiles[0]);\r\n        \r\n        // 파일 확장자를 통해, 불러온 파일이 이미지 파일인지 여부를 확인한다.\r\n        const ext = acceptedFiles[0].name.split('.')[acceptedFiles[0].name.split('.').length - 1];\r\n        if([\"jpg\", \"png\", \"jpeg\", \"svg\"].includes(ext)){\r\n\r\n            const body = {photoName:photoForm.photoName, photoPath:photoForm.photoPath};\r\n            tmpPhotoDelete(body)\r\n            .then(response=>{\r\n                //서버로 이미지 임시 저장\r\n                tmpPhotoUpload({formData, config}).then(\r\n                    response => {\r\n                        console.log(response);\r\n                        if(response?.payload?.success){\r\n                            setPhotoForm({ ...uploadForm,\r\n                                photoPath: response.payload.filePath,\r\n                                photoName: response.payload.fileName,\r\n                            });\r\n                            setIsPhotoChange(true);\r\n                        }\r\n                    });\r\n            });\r\n        }\r\n        else{\r\n            // 이미지 파일이 아닐 경우.\r\n            return alert(\"이미지 파일을 선택해주세요.\");\r\n        }\r\n    }, []);\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\r\n\r\n    // set image title\r\n    const onTitleHandler = (e:any) => { setUploadForm({...uploadForm, title : e.target.value}); };\r\n\r\n    // set image description\r\n    const onDescriptionHandler = (e:any) => { setUploadForm({...uploadForm, description : e.target.value}); };\r\n\r\n    // set image tag\r\n    const onTagHandler = (e:any) => { setUploadForm({...uploadForm, tag : e.target.value}); };\r\n\r\n    // image 태그 추가 핸들러\r\n    const addTagHandler = (e:any) => {\r\n        // enter 입력시 태그 등록\r\n        if(e.key === \"Enter\"){\r\n            e.preventDefault();\r\n            if(uploadForm.tag === \"\") return alert(\"태그를 입력해주세요\");\r\n            setUploadForm({...uploadForm, tag: \"\", tagList : [...uploadForm.tagList, e.target.value] });\r\n        }\r\n    };\r\n\r\n    // set image type\r\n    const onPhotoTypeHandler = (e:any, _type: number) =>{\r\n        e.preventDefault();\r\n        setUploadForm({...uploadForm, photoType: _type });\r\n    };\r\n\r\n    // 서버로 이미지 폼 전송\r\n    const onPhotoSubmit = (e:any) => {\r\n        e.preventDefault();\r\n        // 폼 미작성 부분 확인\r\n        if(uploadForm.title === \"\") return alert(\"타이틀을 입력해주세요\");\r\n        if(photoForm.photoName === \"\") return alert(\"이미지를 넣어주세요.\");\r\n        if(uploadForm.photoType === 4) return alert(\"포토 타입을 클릭해서 정해주세요.\");\r\n\r\n        const body = {\r\n            data:{\r\n                title : uploadForm.title,\r\n                description : uploadForm.description,\r\n                tagList : uploadForm.tagList,\r\n                photoName : photoForm.photoName,\r\n                photoPath : photoForm.photoPath,\r\n                photoType : uploadForm.photoType,\r\n            },\r\n            isPhotoChange,\r\n        };\r\n        \r\n        modifyPhoto(body).then(\r\n            response => {\r\n                console.log(response);\r\n                if(response.payload.success){\r\n                    // 서버로 전송 성공 시, 개인 페이지로 이동\r\n                    disPatch(response);\r\n                    history.push(`/personal/${userData.key}`);\r\n                } else {\r\n                    alert(\"DB 저장에 실패했습니다.\")\r\n                }\r\n            }\r\n        );\r\n\r\n    };\r\n\r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n\r\n        <TopLayout>\r\n            <Header userData={userData}/>\r\n        </TopLayout>\r\n\r\n        {/* 여기서부터 해당 페이지 내용 */}\r\n        <BottomLayout>\r\n            <PageLayout>\r\n                {/* 이미지 가져오는 부분 */}\r\n                <ImgDropDownBox {...getRootProps()} style={{  }}>\r\n                    <input {...getInputProps()} />\r\n                    {photoForm.photoPath !== \"\" ? <UploadImg\r\n                                src={`${SERVER_PATH}${photoForm.photoPath}` }/> : <p style={{zIndex: 3}}> 클릭하거나 이미지를 끌어와 주세요 </p>}\r\n                </ImgDropDownBox>\r\n                \r\n                {/* 이미지 등록 양식 란 */}\r\n                <form onSubmit={onPhotoSubmit} style={{ display:'flex', flexDirection: 'column' }}>\r\n                    <WhiteInputLabel>Title</WhiteInputLabel>\r\n                    <InputBox style={{ width: \"100%\"}} placeholder=\"작품의 제목을 입력해주세요.\" value={uploadForm.title} onChange={onTitleHandler}/>\r\n                    <WhiteInputLabel>Description</WhiteInputLabel>\r\n                    <InputParagraphBox style={{ width:\"95%\" }} placeholder=\"작품을 간단히 설명해주세요.\" value={uploadForm.description} onChange={onDescriptionHandler}/>\r\n                    <WhiteInputLabel>Tag</WhiteInputLabel>\r\n                    <TagList>\r\n                        <InputBox \r\n                        value={uploadForm.tag} \r\n                        onChange={onTagHandler} \r\n                        style={{ marginBottom: 0, width: 120, display:\"flex\", justifyContent:\"center\"}} \r\n                        placeholder=\"# 태그 입력\" \r\n                        onKeyPress={addTagHandler}/>\r\n                        {\r\n                            uploadForm.tagList.map( (tag, index)=> (<TagBox key={index}>{`# ${tag}`}</TagBox>) )\r\n                        }\r\n                    </TagList>\r\n\r\n                    <InputTxt>PHOTO TYPE</InputTxt>\r\n                    <PhotoTypeList>\r\n                        <WhiteBtn isClicked={uploadForm.photoType===0} onClick={(e)=>{onPhotoTypeHandler(e, 0);}}>일러스트</WhiteBtn>\r\n                        <WhiteBtn isClicked={uploadForm.photoType===1} onClick={(e)=>{onPhotoTypeHandler(e, 1);}}>만화</WhiteBtn>\r\n                        <WhiteBtn isClicked={uploadForm.photoType===2} onClick={(e)=>{onPhotoTypeHandler(e, 2);}}>캘리그라피</WhiteBtn>\r\n                    </PhotoTypeList>\r\n                    \r\n                    <BlueBtn type=\"submit\" style={{ marginTop: 54, width: \"100%\"}}>작품 등록</BlueBtn>\r\n                </form>\r\n            </PageLayout>\r\n        </BottomLayout>\r\n        <Footer />\r\n    </>);\r\n}\r\nexport default PhotoModify;","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\commentAction.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\commentReducer.ts",["285"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\PhotoRecommendBox.tsx",["286"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\search\\SearchPage.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\search\\material\\SearchList.tsx",["287"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\FamousTagList.tsx",["288","289","290","291"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\RandomTagStyle.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\LankingList.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\RecentWorkList.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\customMediaQuery.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\findPassowrd\\FindPassord.tsx",["292","293","294"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\Admin.tsx",["295","296"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\adminReducer.ts",["297"],"import { \r\n    GET_DATA,\r\n} from '../actions/types';\r\n\r\n\r\nexport default function(state={}, action:any) {\r\n    switch(action.type){\r\n        case GET_DATA:\r\n\r\n            return {...state, getData: action.payload};\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\component\\data.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\component\\graphMaker.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\adminAction.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\component\\AdminDataList.tsx",["298","299","300"],{"ruleId":"301","severity":1,"message":"302","line":1,"column":16,"nodeType":"303","messageId":"304","endLine":1,"endColumn":24},{"ruleId":"301","severity":1,"message":"305","line":46,"column":11,"nodeType":"303","messageId":"304","endLine":46,"endColumn":23},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","severity":1,"message":"311","line":180,"column":24,"nodeType":"312","messageId":"313","endLine":180,"endColumn":49,"fix":"314"},{"ruleId":"310","severity":1,"message":"315","line":180,"column":51,"nodeType":"312","messageId":"313","endLine":180,"endColumn":68,"fix":"316"},{"ruleId":"317","severity":1,"message":"318","line":222,"column":38,"nodeType":"319","endLine":222,"endColumn":53},{"ruleId":"317","severity":1,"message":"318","line":223,"column":38,"nodeType":"319","endLine":223,"endColumn":53},{"ruleId":"320","severity":1,"message":"321","line":187,"column":45,"nodeType":"322","messageId":"323","endLine":187,"endColumn":47},{"ruleId":"301","severity":1,"message":"324","line":39,"column":11,"nodeType":"303","messageId":"304","endLine":39,"endColumn":18},{"ruleId":"325","severity":1,"message":"326","line":59,"column":8,"nodeType":"327","endLine":59,"endColumn":29,"suggestions":"328"},{"ruleId":"301","severity":1,"message":"329","line":4,"column":8,"nodeType":"303","messageId":"304","endLine":4,"endColumn":16},{"ruleId":"310","severity":1,"message":"311","line":36,"column":20,"nodeType":"312","messageId":"313","endLine":36,"endColumn":45,"fix":"330"},{"ruleId":"310","severity":1,"message":"315","line":36,"column":47,"nodeType":"312","messageId":"313","endLine":36,"endColumn":64,"fix":"331"},{"ruleId":"301","severity":1,"message":"332","line":85,"column":11,"nodeType":"303","messageId":"304","endLine":85,"endColumn":22},{"ruleId":"325","severity":1,"message":"333","line":131,"column":8,"nodeType":"327","endLine":131,"endColumn":15,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":145,"column":25,"nodeType":"337","endLine":145,"endColumn":152},{"ruleId":"301","severity":1,"message":"338","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":26},{"ruleId":"301","severity":1,"message":"302","line":1,"column":28,"nodeType":"303","messageId":"304","endLine":1,"endColumn":36},{"ruleId":"301","severity":1,"message":"339","line":4,"column":23,"nodeType":"303","messageId":"304","endLine":4,"endColumn":31},{"ruleId":"325","severity":1,"message":"340","line":79,"column":8,"nodeType":"327","endLine":79,"endColumn":25,"suggestions":"341"},{"ruleId":"325","severity":1,"message":"342","line":206,"column":8,"nodeType":"327","endLine":206,"endColumn":82,"suggestions":"343"},{"ruleId":"320","severity":1,"message":"321","line":222,"column":73,"nodeType":"322","messageId":"323","endLine":222,"endColumn":75},{"ruleId":"344","severity":1,"message":"345","line":157,"column":38,"nodeType":"346","messageId":"347","endLine":157,"endColumn":39,"suggestions":"348"},{"ruleId":"344","severity":1,"message":"345","line":157,"column":61,"nodeType":"346","messageId":"347","endLine":157,"endColumn":62,"suggestions":"349"},{"ruleId":"301","severity":1,"message":"350","line":7,"column":23,"nodeType":"303","messageId":"304","endLine":7,"endColumn":34},{"ruleId":"344","severity":1,"message":"345","line":111,"column":38,"nodeType":"346","messageId":"347","endLine":111,"endColumn":39,"suggestions":"351"},{"ruleId":"344","severity":1,"message":"345","line":111,"column":61,"nodeType":"346","messageId":"347","endLine":111,"endColumn":62,"suggestions":"352"},{"ruleId":"306","replacedBy":"353"},{"ruleId":"308","replacedBy":"354"},{"ruleId":"306","replacedBy":"355"},{"ruleId":"308","replacedBy":"356"},{"ruleId":"306","replacedBy":"357"},{"ruleId":"308","replacedBy":"358"},{"ruleId":"359","severity":1,"message":"360","line":12,"column":1,"nodeType":"361","endLine":38,"endColumn":2},{"ruleId":"359","severity":1,"message":"360","line":5,"column":1,"nodeType":"361","endLine":43,"endColumn":2},{"ruleId":"325","severity":1,"message":"362","line":36,"column":12,"nodeType":"327","endLine":36,"endColumn":14,"suggestions":"363"},{"ruleId":"301","severity":1,"message":"364","line":2,"column":8,"nodeType":"303","messageId":"304","endLine":2,"endColumn":14},{"ruleId":"325","severity":1,"message":"365","line":61,"column":8,"nodeType":"327","endLine":61,"endColumn":10,"suggestions":"366"},{"ruleId":"301","severity":1,"message":"367","line":63,"column":41,"nodeType":"303","messageId":"304","endLine":63,"endColumn":53},{"ruleId":"301","severity":1,"message":"368","line":16,"column":5,"nodeType":"303","messageId":"304","endLine":16,"endColumn":18},{"ruleId":"359","severity":1,"message":"360","line":14,"column":1,"nodeType":"361","endLine":48,"endColumn":2},{"ruleId":"301","severity":1,"message":"369","line":5,"column":8,"nodeType":"303","messageId":"304","endLine":5,"endColumn":16},{"ruleId":"301","severity":1,"message":"370","line":18,"column":10,"nodeType":"303","messageId":"304","endLine":18,"endColumn":21},{"ruleId":"325","severity":1,"message":"371","line":130,"column":8,"nodeType":"327","endLine":130,"endColumn":10,"suggestions":"372"},{"ruleId":"325","severity":1,"message":"373","line":160,"column":8,"nodeType":"327","endLine":160,"endColumn":10,"suggestions":"374"},{"ruleId":"301","severity":1,"message":"367","line":162,"column":41,"nodeType":"303","messageId":"304","endLine":162,"endColumn":53},{"ruleId":"335","severity":1,"message":"336","line":260,"column":21,"nodeType":"337","endLine":260,"endColumn":179},{"ruleId":"301","severity":1,"message":"375","line":2,"column":17,"nodeType":"303","messageId":"304","endLine":2,"endColumn":20},{"ruleId":"306","replacedBy":"376"},{"ruleId":"308","replacedBy":"377"},{"ruleId":"325","severity":1,"message":"378","line":60,"column":8,"nodeType":"327","endLine":60,"endColumn":10,"suggestions":"379"},{"ruleId":"325","severity":1,"message":"380","line":97,"column":8,"nodeType":"327","endLine":97,"endColumn":10,"suggestions":"381"},{"ruleId":"301","severity":1,"message":"367","line":99,"column":41,"nodeType":"303","messageId":"304","endLine":99,"endColumn":53},{"ruleId":"359","severity":1,"message":"360","line":9,"column":1,"nodeType":"361","endLine":28,"endColumn":2},{"ruleId":"301","severity":1,"message":"382","line":4,"column":10,"nodeType":"303","messageId":"304","endLine":4,"endColumn":17},{"ruleId":"301","severity":1,"message":"383","line":5,"column":8,"nodeType":"303","messageId":"304","endLine":5,"endColumn":18},{"ruleId":"301","severity":1,"message":"338","line":1,"column":17,"nodeType":"303","messageId":"304","endLine":1,"endColumn":26},{"ruleId":"301","severity":1,"message":"384","line":1,"column":28,"nodeType":"303","messageId":"304","endLine":1,"endColumn":34},{"ruleId":"301","severity":1,"message":"302","line":1,"column":36,"nodeType":"303","messageId":"304","endLine":1,"endColumn":44},{"ruleId":"301","severity":1,"message":"375","line":2,"column":17,"nodeType":"303","messageId":"304","endLine":2,"endColumn":20},{"ruleId":"301","severity":1,"message":"350","line":7,"column":23,"nodeType":"303","messageId":"304","endLine":7,"endColumn":34},{"ruleId":"344","severity":1,"message":"345","line":109,"column":38,"nodeType":"346","messageId":"347","endLine":109,"endColumn":39,"suggestions":"385"},{"ruleId":"344","severity":1,"message":"345","line":109,"column":61,"nodeType":"346","messageId":"347","endLine":109,"endColumn":62,"suggestions":"386"},{"ruleId":"301","severity":1,"message":"387","line":74,"column":12,"nodeType":"303","messageId":"304","endLine":74,"endColumn":23},{"ruleId":"325","severity":1,"message":"388","line":217,"column":8,"nodeType":"327","endLine":217,"endColumn":10,"suggestions":"389"},{"ruleId":"359","severity":1,"message":"360","line":6,"column":1,"nodeType":"361","endLine":17,"endColumn":2},{"ruleId":"301","severity":1,"message":"390","line":8,"column":7,"nodeType":"303","messageId":"304","endLine":8,"endColumn":12},{"ruleId":"320","severity":1,"message":"391","line":137,"column":100,"nodeType":"392","messageId":"393","endLine":137,"endColumn":107},{"ruleId":"320","severity":1,"message":"391","line":138,"column":99,"nodeType":"392","messageId":"393","endLine":138,"endColumn":106},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'moveCategory' is assigned a value but never used.","no-native-reassign",["394"],"no-negated-in-lhs",["395"],"no-useless-rename","Destructuring assignment personalInfo unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"396","text":"397"},"Destructuring assignment userData unnecessarily renamed.",{"range":"398","text":"399"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.id'. Either include it or remove the dependency array.","ArrayExpression",["400"],"'upperImg' is defined but never used.",{"range":"401","text":"397"},{"range":"402","text":"399"},"'photoStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'match.id', 'photoInfo?._id', and 'photoInfo?.tagList'. Either include them or remove the dependency array.",["403"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'getIsNew' is defined but never used.","React Hook useEffect has a missing dependency: 'authorInfo'. Either include it or remove the dependency array.",["404"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["405"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["406","407"],["408","409"],"'useSelector' is defined but never used.",["410","411"],["412","413"],["394"],["395"],["394"],["395"],["394"],["395"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["414"],"'styled' is defined but never used.","React Hook useCallback has a missing dependency: 'photoForm'. Either include it or remove the dependency array. You can also do a functional update 'setPhotoForm(p => ...)' if you only need 'photoForm' in the 'setPhotoForm' call.",["415"],"'isDragActive' is assigned a value but never used.","'SEARCH_AUTHOR' is defined but never used.","'Category' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'userData?.authorName', 'userData?.homepage', 'userData?.instruction', 'userData?.personalImgName', 'userData?.personalImgPath', 'userData?.twitter', 'userData?.upperImgName', and 'userData?.upperImgPath'. Either include them or remove the dependency array.",["416"],"React Hook useCallback has a missing dependency: 'upperPhoto'. Either include it or remove the dependency array. You can also do a functional update 'setUpperPhoto(u => ...)' if you only need 'upperPhoto' in the 'setUpperPhoto' call.",["417"],"'css' is defined but never used.",["394"],["395"],"React Hook useEffect has missing dependencies: 'photoData?.id', 'photoForm', and 'uploadForm'. Either include them or remove the dependency array. You can also do a functional update 'setUploadForm(u => ...)' if you only need 'uploadForm' in the 'setUploadForm' call.",["418"],"React Hook useCallback has missing dependencies: 'photoForm.photoName', 'photoForm.photoPath', and 'uploadForm'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPhotoForm' needs the current value of 'uploadForm'.",["419"],"'BlueBtn' is defined but never used.","'defaultImg' is defined but never used.","'useRef' is defined but never used.",["420","421"],["422","423"],"'visitorData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'drawGraph'. Either include it or remove the dependency array.",["424"],"'Whole' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation",[3595,3620],"personalInfo",[3622,3639],"userData",{"desc":"425","fix":"426"},[784,809],[811,828],{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"messageId":"433","fix":"434","desc":"435"},{"messageId":"436","fix":"437","desc":"438"},{"messageId":"433","fix":"439","desc":"435"},{"messageId":"436","fix":"440","desc":"438"},{"messageId":"433","fix":"441","desc":"435"},{"messageId":"436","fix":"442","desc":"438"},{"messageId":"433","fix":"443","desc":"435"},{"messageId":"436","fix":"444","desc":"438"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"messageId":"433","fix":"457","desc":"435"},{"messageId":"436","fix":"458","desc":"438"},{"messageId":"433","fix":"459","desc":"435"},{"messageId":"436","fix":"460","desc":"438"},{"desc":"461","fix":"462"},"Update the dependencies array to be: [match.id, status.deletePhoto]",{"range":"463","text":"464"},"Update the dependencies array to be: [history, isNew, match.id, photoInfo?._id, photoInfo?.tagList]",{"range":"465","text":"466"},"Update the dependencies array to be: [authorInfo, authorInfo?.key]",{"range":"467","text":"468"},"Update the dependencies array to be: [photoInfo?._id, commentStatus.deleteComment, commentStatus.modifyComment, dispatch]",{"range":"469","text":"470"},"removeEscape",{"range":"471","text":"472"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"473","text":"474"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"475","text":"472"},{"range":"476","text":"474"},{"range":"477","text":"472"},{"range":"478","text":"474"},{"range":"479","text":"472"},{"range":"480","text":"474"},"Update the dependencies array to be: [dispatch, props.history]",{"range":"481","text":"482"},"Update the dependencies array to be: [photoForm]",{"range":"483","text":"484"},"Update the dependencies array to be: [userData?.authorName, userData?.homepage, userData?.instruction, userData?.personalImgName, userData?.personalImgPath, userData?.twitter, userData?.upperImgName, userData?.upperImgPath]",{"range":"485","text":"486"},"Update the dependencies array to be: [upperPhoto]",{"range":"487","text":"488"},"Update the dependencies array to be: [photoData?.id, photoForm, uploadForm]",{"range":"489","text":"490"},"Update the dependencies array to be: [photoForm.photoName, photoForm.photoPath, uploadForm]",{"range":"491","text":"492"},{"range":"493","text":"472"},{"range":"494","text":"474"},{"range":"495","text":"472"},{"range":"496","text":"474"},"Update the dependencies array to be: [drawGraph]",{"range":"497","text":"498"},[1722,1743],"[match.id, status.deletePhoto]",[3847,3854],"[history, isNew, match.id, photoInfo?._id, photoInfo?.tagList]",[1850,1867],"[authorInfo, authorInfo?.key]",[5361,5435],"[photoInfo?._id, commentStatus.deleteComment, commentStatus.modifyComment, dispatch]",[3256,3257],"",[3256,3256],"\\",[3279,3280],[3279,3279],[2697,2698],[2697,2697],[2720,2721],[2720,2720],[1335,1337],"[dispatch, props.history]",[2183,2185],"[photoForm]",[3749,3751],"[userData?.authorName, userData?.homepage, userData?.instruction, userData?.personalImgName, userData?.personalImgPath, userData?.twitter, userData?.upperImgName, userData?.upperImgPath]",[4797,4799],"[upperPhoto]",[2205,2207],"[photoData?.id, photoForm, uploadForm]",[3623,3625],"[photoForm.photoName, photoForm.photoPath, uploadForm]",[2658,2659],[2658,2658],[2681,2682],[2681,2681],[6874,6876],"[drawGraph]"]