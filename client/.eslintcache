[{"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\search.tsx":"1","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\App.js":"2","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Search.tsx":"3","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\reportWebVitals.js":"4","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\HeaderIconList.tsx":"5","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\MainLogo.tsx":"6","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\globalStyles.js":"7","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Header.tsx":"8","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Category.tsx":"9","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Footer.tsx":"10","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\Main.tsx":"11","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\material\\PersonalInfo.tsx":"12","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\material\\BottomImgList.tsx":"13","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\Personal.tsx":"14","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\material\\UpperImg.tsx":"15","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\Photo.tsx":"16","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\ImgDescription.tsx":"17","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\AuthorImgList.tsx":"18","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\Comment.tsx":"19","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\login\\Login.tsx":"20","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\register\\Register.tsx":"21","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\button.tsx":"22","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\index.js":"23","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\input.tsx":"24","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\userAction.ts":"25","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\index.ts":"26","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\userReducer.ts":"27","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\types.ts":"28","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\hoc\\auth.js":"29","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\upload\\PhotoUpload.tsx":"30","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\photoAction.ts":"31","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\photoReducer.ts":"32","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\PersonalModify.tsx":"33","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\personalAction.ts":"34","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Test.tsx":"35","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\config\\path.ts":"36","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\upload\\PhotoModify.tsx":"37","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\commentAction.ts":"38","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\commentReducer.ts":"39","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\PhotoRecommendBox.tsx":"40","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\search\\SearchPage.tsx":"41","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\search\\material\\SearchList.tsx":"42","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\FamousTagList.tsx":"43","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\RandomTagStyle.tsx":"44","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\LankingList.tsx":"45","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\RecentWorkList.tsx":"46","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\customMediaQuery.ts":"47","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\findPassowrd\\FindPassord.tsx":"48","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\Admin.tsx":"49","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\adminReducer.ts":"50","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\component\\data.ts":"51","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\component\\graphMaker.ts":"52","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\adminAction.ts":"53","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\component\\AdminDataList.tsx":"54","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\upload\\component\\UploadUI.tsx":"55"},{"size":289,"mtime":1609252102924,"results":"56","hashOfConfig":"57"},{"size":1942,"mtime":1612421180037,"results":"58","hashOfConfig":"57"},{"size":2180,"mtime":1612421443321,"results":"59","hashOfConfig":"57"},{"size":362,"mtime":1608542971129,"results":"60","hashOfConfig":"57"},{"size":7137,"mtime":1613531953473,"results":"61","hashOfConfig":"57"},{"size":576,"mtime":1612421439914,"results":"62","hashOfConfig":"57"},{"size":1313,"mtime":1610691156057,"results":"63","hashOfConfig":"57"},{"size":1034,"mtime":1612421788057,"results":"64","hashOfConfig":"57"},{"size":1247,"mtime":1612421418098,"results":"65","hashOfConfig":"57"},{"size":627,"mtime":1612421420997,"results":"66","hashOfConfig":"57"},{"size":3371,"mtime":1613489949009,"results":"67","hashOfConfig":"57"},{"size":6622,"mtime":1613491095274,"results":"68","hashOfConfig":"57"},{"size":5575,"mtime":1613491254424,"results":"69","hashOfConfig":"57"},{"size":2272,"mtime":1613491399551,"results":"70","hashOfConfig":"57"},{"size":1306,"mtime":1613490395937,"results":"71","hashOfConfig":"57"},{"size":5692,"mtime":1613531313566,"results":"72","hashOfConfig":"57"},{"size":4396,"mtime":1613530158475,"results":"73","hashOfConfig":"57"},{"size":3464,"mtime":1613531356766,"results":"74","hashOfConfig":"57"},{"size":8588,"mtime":1613528072094,"results":"75","hashOfConfig":"57"},{"size":5907,"mtime":1612423142049,"results":"76","hashOfConfig":"57"},{"size":8659,"mtime":1612433754872,"results":"77","hashOfConfig":"57"},{"size":2327,"mtime":1612421412508,"results":"78","hashOfConfig":"57"},{"size":828,"mtime":1613535447699,"results":"79","hashOfConfig":"57"},{"size":1136,"mtime":1612421437372,"results":"80","hashOfConfig":"57"},{"size":5049,"mtime":1612434404928,"results":"81","hashOfConfig":"57"},{"size":315,"mtime":1611467091143,"results":"82","hashOfConfig":"57"},{"size":1549,"mtime":1612432435534,"results":"83","hashOfConfig":"57"},{"size":2130,"mtime":1612160240021,"results":"84","hashOfConfig":"57"},{"size":1984,"mtime":1613486031587,"results":"85","hashOfConfig":"57"},{"size":7763,"mtime":1612433305777,"results":"86","hashOfConfig":"57"},{"size":6422,"mtime":1613529982311,"results":"87","hashOfConfig":"57"},{"size":1896,"mtime":1612426966645,"results":"88","hashOfConfig":"57"},{"size":11091,"mtime":1612434127092,"results":"89","hashOfConfig":"57"},{"size":465,"mtime":1612426474080,"results":"90","hashOfConfig":"57"},{"size":681,"mtime":1613485835647,"results":"91","hashOfConfig":"57"},{"size":154,"mtime":1612418369259,"results":"92","hashOfConfig":"57"},{"size":9357,"mtime":1612433312826,"results":"93","hashOfConfig":"57"},{"size":1130,"mtime":1610285966990,"results":"94","hashOfConfig":"57"},{"size":625,"mtime":1610287809562,"results":"95","hashOfConfig":"57"},{"size":1724,"mtime":1612431921112,"results":"96","hashOfConfig":"57"},{"size":4275,"mtime":1612969692649,"results":"97","hashOfConfig":"57"},{"size":2926,"mtime":1612162854216,"results":"98","hashOfConfig":"57"},{"size":972,"mtime":1613490040782,"results":"99","hashOfConfig":"57"},{"size":2017,"mtime":1613490020244,"results":"100","hashOfConfig":"57"},{"size":3380,"mtime":1613487654670,"results":"101","hashOfConfig":"57"},{"size":2149,"mtime":1613488284679,"results":"102","hashOfConfig":"57"},{"size":318,"mtime":1612418798964,"results":"103","hashOfConfig":"57"},{"size":8200,"mtime":1612423066691,"results":"104","hashOfConfig":"57"},{"size":9103,"mtime":1613527061508,"results":"105","hashOfConfig":"57"},{"size":770,"mtime":1612422389092,"results":"106","hashOfConfig":"57"},{"size":637,"mtime":1612422400272,"results":"107","hashOfConfig":"57"},{"size":1888,"mtime":1612421884030,"results":"108","hashOfConfig":"57"},{"size":1635,"mtime":1612433474200,"results":"109","hashOfConfig":"57"},{"size":5967,"mtime":1613527260126,"results":"110","hashOfConfig":"57"},{"size":2777,"mtime":1612432786072,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y19unq",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"154"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"154"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\search.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\App.js",[],["232","233"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Search.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\reportWebVitals.js",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\HeaderIconList.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\MainLogo.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\globalStyles.js",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Header.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Category.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Footer.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\Main.tsx",["234"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\material\\PersonalInfo.tsx",["235","236"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\material\\BottomImgList.tsx",["237"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\Personal.tsx",["238"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\material\\UpperImg.tsx",["239"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\Photo.tsx",["240","241"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\ImgDescription.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\AuthorImgList.tsx",["242"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\Comment.tsx",["243","244"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\login\\Login.tsx",["245","246"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'globalStyles';\r\nimport {InputBox} from 'component/input';\r\nimport {BlueBtn} from 'component/button';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginUser } from 'redux/actions/userAction';\r\nimport {useHistory} from 'react-router';\r\nimport { media } from 'component/customMediaQuery';\r\nimport background from 'img/background.jpg'\r\nimport loginImg from 'img/login_left_img.jpg'\r\n\r\nconst Whole=styled.section`\r\n    background-size: cover;\r\n\r\n    width: 100%;\r\n    height: 100vh;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst LoginScreen = styled.div`\r\n    width: 1000px;\r\n    height: 600px;\r\n    padding: 110px 94px;\r\n\r\n    background: #FFFFFF;\r\n    border-radius: 8px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${media.tablet}{\r\n        width: 740px;\r\n        padding: 110px 50px;\r\n    }\r\n\r\n    ${media.phone}{\r\n        width: 310px;\r\n        height: 430px;\r\n        padding: 110px 20px;\r\n    }\r\n`;\r\n\r\nconst LoginScreenLeft = styled.img`\r\n    width: 380px;\r\n    height: 380px;\r\n    margin-right: 4vw;\r\n\r\n    border-radius: 8px;\r\n    ${media.tablet}{\r\n        width: 280px;\r\n        height: 280px;\r\n    }\r\n\r\n    ${media.phone}{\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst LoginScreenRight = styled.article`\r\n    width: 380px;\r\n    height: 380px;\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${media.phone}{\r\n        width: 280px;\r\n    }\r\n\r\n`;\r\n\r\nconst SiteTitle=styled.h1`\r\n    margin-bottom: 57px;\r\n    font-weight: 800;\r\n    font-size: 42px;\r\n    color: #00A0FF;\r\n\r\n    ${media.phone}{\r\n        margin-bottom: 2.5rem;\r\n        font-size: 32px;\r\n    }\r\n`;\r\n\r\nconst LoginLayout=styled.article`\r\n    width: 353px;\r\n    height: 254px;\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    background: #daf8ff;\r\n    border-radius: 8px;\r\n\r\n    ${media.phone}{\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst LoginInputBox=styled.form`\r\n    width: 100%;\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst LoginSubBtnList=styled.article`\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content:space-around;\r\n    margin-top: 18px;\r\n`;\r\n\r\n// 회원 가입, 아이디 찾기 비번 찾기\r\nconst LoginSubBtn=styled.button`\r\n    font-weight: 800;\r\n    font-size: 14px;\r\n    color: #00A0FF;\r\n    background: #E6FAFF;\r\n    cursor:pointer;\r\n\r\n    &:hover{\r\n        font-size:15px;\r\n    }\r\n`;\r\n\r\n// 로그인 화면 컴포넌트\r\nfunction Login(){\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const [password, setpassword] = useState<string>(\"\");\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    // email input 변경 내용 저장\r\n    const onEmailHandler = (e:any) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    // pw input 변경 내용 저장\r\n    const onPasswordHandler = (e:any) => {\r\n        setpassword(e.target.value);\r\n    };\r\n\r\n    // 사용자가 입력한 로그인 데이터 폼을 서버로 보냄\r\n    const onSubmitHandler = (e:any) => {\r\n        e.preventDefault();\r\n        const emailRegex = /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n\r\n        // 로그인할 때 이메일 양식으로 입력하지 않았을 경우.\r\n        if(!emailRegex.test(email)){\r\n            return alert('이메일 형식이 아닙니다.');\r\n        }\r\n        \r\n        if(password.length < 8) return alert('비밀번호는 최소 8자여야합니다.');\r\n\r\n        // 서버로 보낼 데이터 body\r\n        const body = {\r\n            email,\r\n            password,\r\n        };\r\n\r\n        // 로그인 api\r\n        loginUser(body)\r\n        .then(response => {\r\n\r\n            // 로그인 성공 시, 로그인 정보 저장 및 main 화면으로 이동\r\n            if(response.payload.success){\r\n                dispatch(response);\r\n                history.push(\"/\");\r\n            }else{\r\n                // 로그인 실패 시, 경고 문구 출력\r\n                alert(response.payload.message);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n        <Whole style={{backgroundImage:`url(${background})`}}>\r\n            <LoginScreen>\r\n                {/* 로그인 창 왼쪽에 위치한 이미지 */}\r\n                <LoginScreenLeft src={loginImg}/>\r\n\r\n                <LoginScreenRight>\r\n                    <SiteTitle>Newone</SiteTitle>\r\n\r\n                    <LoginLayout>\r\n                        {/* 로그인 폼 양식 */}\r\n                        <LoginInputBox onSubmit={onSubmitHandler} >\r\n                            <InputBox style={{width:\"80%\", fontSize:\"1.1rem\"}} placeholder=\"이메일\" defaultValue={email} onChange={onEmailHandler} />\r\n                            <InputBox style={{width:\"80%\", fontSize:\"1.1rem\"}} placeholder=\"비밀번호\" defaultValue={password} onChange={onPasswordHandler} maxLength={16} type=\"password\"/>\r\n                            <BlueBtn style={{width:\"80%\"}} type=\"submit\" >로그인</BlueBtn>\r\n                        </LoginInputBox>\r\n\r\n                        {/*  회원 가입,  비밀 번호 찾기 버튼*/}\r\n                        <LoginSubBtnList >\r\n                            <Link to=\"/register\"><LoginSubBtn>회원 가입</LoginSubBtn></Link>\r\n                            <Link to=\"/findpassword\"><LoginSubBtn>비밀 번호 찾기</LoginSubBtn></Link>\r\n                        </LoginSubBtnList>\r\n                    </LoginLayout>\r\n                </LoginScreenRight>\r\n            </LoginScreen>\r\n        </Whole>\r\n    </>);\r\n}\r\nexport default Login;",["247","248"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\register\\Register.tsx",["249","250"],"import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'globalStyles';\r\nimport {InputBox} from 'component/input';\r\nimport { VerifyBtn } from 'component/button';\r\nimport { getVerifiedCode, registerUser } from 'redux/actions/userAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from 'react-router-dom';\r\nimport {useHistory} from 'react-router';\r\nimport { media } from 'component/customMediaQuery';\r\nimport background from 'img/background.jpg'\r\n\r\nconst Whole=styled.section`\r\n    background-size: cover;\r\n\r\n    width: 100%;\r\n    height: 100vh;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst RegisterScreen = styled.div`\r\n    width: 508px;\r\n    height: 600px;\r\n    position: relative;\r\n\r\n    background: #FFFFFF;\r\n    border-radius: 8px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${media.phone}{\r\n        width: 310px;\r\n        height: 520px;\r\n    }\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n    position: absolute;\r\n    top: 30px;\r\n    left: 30px;\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst RegisterBox = styled.article`\r\n    width: 74%;\r\n    height: 63.3%;\r\n    padding: 90px 0 49px;\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${media.phone}{\r\n        width: 88%;\r\n        padding: 80px 0 49px;\r\n    }\r\n`;\r\n\r\nconst SiteTitle=styled.h1`\r\n    margin-bottom: 3.5rem;\r\n    font-weight: 800;\r\n    font-size: 42px;\r\n    color: #00A0FF;\r\n\r\n    ${media.phone}{\r\n        margin-bottom: 2.5rem;\r\n        font-size: 32px;\r\n    }\r\n`;\r\n\r\nconst RegisterForm=styled.form`\r\n    width: 100%;\r\n    padding: 27px 0 40px;\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    background: #daf8ff;\r\n    border-radius: 8px;\r\n`;\r\n\r\nconst initRegisterForm = {\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    authorName: \"\",\r\n};\r\n\r\nfunction Register(){\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [registerForm, setRegisterForm] = useState(initRegisterForm);\r\n\r\n    const [isVerified, setIsVerified] = useState<number>(0);        // 0: 인증 넘버 아직 수신 전 ,  1: 인증 넘버 수신 받음,  2: 인증 완료\r\n    const [verifiedCode, setVerifiedCode] = useState<string>();\r\n    const [checkVerifiedCode, setCheckVerifiedCode] = useState<string>();\r\n\r\n    const emailCheck = (email:string) => {\r\n        // 이메일 형식 여부 확인\r\n        const emailRegex = /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n        if(!emailRegex.test(email)) return false;\r\n        return true;\r\n    };\r\n\r\n    // email, password, 2차 password, authorname state 저장\r\n    const onEmailHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setRegisterForm({...registerForm, email: e.target.value}); };\r\n    const onPasswordHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setRegisterForm({...registerForm, password: e.target.value}); };\r\n    const onConfirmPasswordHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setRegisterForm({...registerForm, confirmPassword: e.target.value}); };\r\n    const onAuthorNameHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setRegisterForm({...registerForm, authorName: e.target.value});  };\r\n    const onVerifiedCodeHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setVerifiedCode(e.target.value);  };\r\n\r\n    // 인증 번호를 보낸다.\r\n    const onSendVerifiedNumberHandler = (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) => { \r\n        e.preventDefault();\r\n        if(!emailCheck(registerForm.email)) return alert('이메일 형식이 아닙니다.');\r\n\r\n        // 유저가 인증번호를 수신함\r\n        setIsVerified(1);\r\n\r\n        getVerifiedCode({email: registerForm.email, str: \"회원가입\"}).then(\r\n        response=> {\r\n            if(response.payload.success) setCheckVerifiedCode(response.payload.verificationNumber.toString());\r\n            dispatch(response);\r\n        });\r\n\r\n        return alert('인증 번호가 발송되었습니다.');\r\n    };\r\n\r\n    // 이메일로 통해 받은 인증번호를 확인한다.\r\n    const onCheckVerifiedNumberHandler = (e:any) => {\r\n        e.preventDefault();\r\n\r\n        // 테스트 키\r\n        if(verifiedCode === \"9999\"){\r\n            setIsVerified(2);\r\n            return ;\r\n        }\r\n\r\n        if(checkVerifiedCode !== verifiedCode) {\r\n            setVerifiedCode(\"\");\r\n            return alert('인증 번호가 일치하지 않습니다.')\r\n        };\r\n\r\n        setIsVerified(2);       // 인증번호가 일치하면 인증확인 Txt 표시\r\n    }\r\n\r\n    // 회원가입 양식 서버로 제출\r\n    const onSubmitHandler = (e:any) => {\r\n        e.preventDefault();\r\n\r\n        if(isVerified !== 2) return alert('이메일 인증을 진행해주십시오.');\r\n        // 이메일 형식 확인\r\n        if(!emailCheck(registerForm.email)) return alert('이메일 형식이 아닙니다.');\r\n        // password 양식 확인\r\n        if(registerForm.password.length < 8) return alert('비밀번호는 최소 8자여야합니다.');\r\n        if(registerForm.password !== registerForm.confirmPassword) return alert('비밀번호와 비밀번호 확인은 같아야합니다.');\r\n\r\n        const body = {\r\n            email : registerForm.email,\r\n            password : registerForm.password,\r\n            authorName : registerForm.authorName,\r\n        };\r\n\r\n        // 서버로 회원가입 형식 보냄\r\n        registerUser(body)\r\n        .then(response => {\r\n            if (response.payload.success) {\r\n                dispatch(response);\r\n                history.push(\"/login\");\r\n            } else {\r\n                // db 에러 문구에 따라 사용자에게 알림문구 출력\r\n                if(Object.keys(response.payload.err)[0] === \"email\"){\r\n                    alert(\"이미 중복된 아이디입니다.\");\r\n                }else{\r\n                    alert(\"중복된 작가 명입니다.\");\r\n                }                \r\n            }\r\n        });\r\n    };\r\n\r\n    // 인증 상태에 따른 인증 번호 버튼 UI 변경 함수\r\n    const VerifyUI = () => {\r\n        if(isVerified === 0) {\r\n            return <VerifyBtn type=\"button\" onClick={onSendVerifiedNumberHandler}>인증번호 받기</VerifyBtn>;\r\n        }\r\n        else if(isVerified === 1) {\r\n            return  <VerifyBtn type=\"button\" onClick={onCheckVerifiedNumberHandler}>인증번호 확인</VerifyBtn>;\r\n        }\r\n        else{\r\n            return <VerifyBtn type=\"button\" >확인 완료</VerifyBtn>;\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n        <Whole style={{backgroundImage:`url(${background})`}}>\r\n            <RegisterScreen>\r\n                {/* 이전 로그인 창으로 가는 버튼 */}\r\n                <IconBox>\r\n                    <Link to=\"/login\">\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                    </Link>\r\n                </IconBox>\r\n                {/* 회원가입 input 형식 */}\r\n                <RegisterBox>\r\n                    <SiteTitle>Newone</SiteTitle>\r\n                    <RegisterForm onSubmit={onSubmitHandler}>\r\n                        <InputBox style={{width:\"80%\"}} placeholder=\"이메일\" value={registerForm.email} onChange={onEmailHandler}/>\r\n                        <div style={{display: \"flex\", width:\"80%\" }}>\r\n                            <InputBox defaultValue={\"\"} onChange={onVerifiedCodeHandler} style={{width:\"57%\"}} placeholder=\"이메일 인증번호\" />\r\n                            {VerifyUI()}\r\n                        </div>\r\n                        <InputBox style={{width:\"80%\"}} placeholder=\"비밀번호\" defaultValue={\"\"} onChange={onPasswordHandler} maxLength={16} type=\"password\"/>\r\n                        <InputBox style={{width:\"80%\"}} placeholder=\"비밀번호 확인\" defaultValue={\"\"} onChange={onConfirmPasswordHandler} maxLength={16} type=\"password\"/>\r\n                        <InputBox style={{width:\"80%\"}} placeholder=\"작가 별칭\" defaultValue={\"\"} onChange={onAuthorNameHandler} maxLength={16} />\r\n                        <VerifyBtn style={{width:\"80%\"}} type=\"submit\">회원가입</VerifyBtn>\r\n                    </RegisterForm>\r\n                </RegisterBox>\r\n            </RegisterScreen>\r\n        </Whole>\r\n    </>);\r\n}\r\nexport default Register;","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\button.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\index.js",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\input.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\userAction.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\userReducer.ts",["251"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\types.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\hoc\\auth.js",["252"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\upload\\PhotoUpload.tsx",["253","254","255"],"import React, { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'globalStyles';\r\nimport Header from 'component/Header';\r\nimport Footer from 'component/Footer';\r\n\r\nimport { InputBox, InputParagraphBox, WhiteInputLabel } from 'component/input';\r\nimport { BlueBtn, WhiteBtn } from 'component/button';\r\nimport { addPhoto, tmpPhotoUpload } from 'redux/actions/photoAction';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { SERVER_PATH } from 'config/path';\r\n\r\nimport { \r\n    TopLayout, \r\n    BottomLayout, \r\n    PageLayout, \r\n    ImgDropDownBox, \r\n    UploadImg, \r\n    InputTxt, \r\n    TagList, \r\n    TagBox, \r\n    PhotoTypeList, \r\n    initUploadForm, \r\n    UploadFormType, \r\n    initPhotoForm, \r\n    PhotoFormType  \r\n} from './component/UploadUI';\r\n\r\n// 작품 등록 페이지 컴포넌트\r\nfunction PhotoUpload(){\r\n    const [uploadForm, setUploadForm] = useState<UploadFormType>(initUploadForm);           // 서버로 보낼 작품 업로드 폼\r\n    const [photoForm, setPhotoForm] = useState<PhotoFormType>(initPhotoForm);               // 이미지 드롭존으로 받은 이미지 정보\r\n    const disPatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    // 사용자의 데이터를 가져온다.\r\n    const userData = useSelector(state => state.user.auth);\r\n    console.log(userData);\r\n\r\n    // 이미지 드롭박스 구간에서 이미지를 드롭하거나 이미지를 선택했을 때\r\n    const onDrop = useCallback(acceptedFiles => {\r\n\r\n        // 다중 파일 업로드를 위한 폼 데이터\r\n        const formData = new FormData();\r\n        const config = {\r\n            headers: { 'Content-type': 'multipart/form-data' }\r\n        };\r\n        formData.append(\"file\", acceptedFiles[0]);\r\n\r\n        // 파일 확장자를 통해, 불러온 파일이 이미지 파일인지 여부를 확인한다.\r\n        const ext = acceptedFiles[0].name.split('.')[acceptedFiles[0].name.split('.').length - 1];\r\n        if([\"jpg\", \"png\", \"jpeg\", \"svg\"].includes(ext)){\r\n            tmpPhotoUpload({formData, config}).then(\r\n                response => {\r\n                    if(response?.payload?.success) setPhotoForm({...photoForm, photoName: response.payload.fileName, photoPath: response.payload.filePath});\r\n                });\r\n        }\r\n        // 이미지 파일이 아닐 경우.\r\n        else{ return alert(\"이미지 파일을 선택해주세요.\"); }\r\n    }, []);\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\r\n    // set image title\r\n    const onTitleHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setUploadForm({...uploadForm, title:e.target.value}); };\r\n\r\n    // set image description\r\n    const onDescriptionHandler = (e:React.ChangeEvent<HTMLTextAreaElement>) => { setUploadForm({...uploadForm, description:e.target.value}); };\r\n\r\n    // set image tag\r\n    const onTagHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setUploadForm({...uploadForm, tag:e.target.value}); };\r\n\r\n    // image 태그 추가 핸들러\r\n    const addTagHandler = (e:any) => {\r\n        // enter 입력시 태그 등록\r\n        if(e.key === \"Enter\"){\r\n            e.preventDefault();\r\n            if(uploadForm.tag === \"\") return alert(\"태그를 입력해주세요\");\r\n            setUploadForm({ ...uploadForm, tag:\"\", tagList: [...uploadForm.tagList, uploadForm.tag] });\r\n        }\r\n    };\r\n\r\n    // set image type\r\n    const onPhotoTypeHandler = (e:React.MouseEvent<HTMLButtonElement, MouseEvent>, _type: number) =>{\r\n        e.preventDefault();\r\n        setUploadForm({ ...uploadForm, photoType:_type });\r\n    };\r\n\r\n    // 서버로 이미지 폼 전송\r\n    const onPhotoSubmit = (e:any) => {\r\n        e.preventDefault();\r\n        // 폼 미작성 부분 확인\r\n        if(uploadForm.title === \"\") return alert(\"타이틀을 입력해주세요\");\r\n        if(photoForm.photoName === \"\") return alert(\"이미지를 넣어주세요.\");\r\n        if(uploadForm.photoType === 4) return alert(\"포토 타입을 클릭해서 정해주세요.\");\r\n\r\n        const body = {\r\n            title : uploadForm.title,\r\n            description : uploadForm.description,\r\n            tagList : uploadForm.tagList,\r\n            photoName : photoForm.photoName,\r\n            photoPath : photoForm.photoPath,\r\n            photoType : uploadForm.photoType,\r\n        };\r\n        addPhoto(body).then(\r\n            response => {\r\n                console.log(response);\r\n                if(response.payload.success){\r\n                    // 서버로 전송 성공 시, 개인 페이지로 이동\r\n                    history.push(`/personal/${userData.key}`);\r\n                } else {\r\n                    alert(\"DB 저장에 실패했습니다.\")\r\n                }\r\n                disPatch(response);\r\n            });\r\n    };\r\n\r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n        <TopLayout>\r\n            <Header userData={userData}/>\r\n        </TopLayout>\r\n\r\n        {/* 여기서부터 해당 페이지 내용 */}\r\n        <BottomLayout>\r\n            <PageLayout>\r\n                {/* 이미지 가져오는 부분 */}\r\n                <ImgDropDownBox {...getRootProps()} >\r\n                    <input {...getInputProps()} />\r\n                    {photoForm.photoPath !== \"\" ? <UploadImg\r\n                                src={`${SERVER_PATH}${photoForm.photoPath}` }/> : <p style={{zIndex: 3}}> 클릭하거나 이미지를 끌어와 주세요 </p>}\r\n                </ImgDropDownBox>\r\n                \r\n                {/* 이미지 등록 양식 란 */}\r\n                <form onSubmit={onPhotoSubmit} style={{ display:'flex', flexDirection: 'column' }}>\r\n                    <WhiteInputLabel>Title</WhiteInputLabel>\r\n                    <InputBox style={{ width: \"100%\"}} placeholder=\"작품의 제목을 입력해주세요.\" defaultValue={uploadForm.title} onChange={onTitleHandler} maxLength={20}/>\r\n\r\n                    <WhiteInputLabel>Description</WhiteInputLabel>\r\n                    <InputParagraphBox placeholder=\"작품을 간단히 설명해주세요.\" defaultValue={uploadForm.description} onChange={onDescriptionHandler} maxLength={80}/>\r\n\r\n                    <WhiteInputLabel>Tag</WhiteInputLabel>\r\n                    <TagList>\r\n                        <InputBox \r\n                        defaultValue={uploadForm.tag} onChange={onTagHandler} \r\n                        style={{ marginBottom: 0, width: 100, display:\"flex\", justifyContent:\"center\", fontSize:12}} \r\n                        placeholder=\"# 태그 입력\" \r\n                        maxLength={10}\r\n                        onKeyPress={addTagHandler}/>\r\n                        { \r\n                            uploadForm.tagList.map( (tag, index)=> (<TagBox key={index}>{`# ${tag}`}</TagBox>) )\r\n                        }\r\n                    </TagList>\r\n\r\n                    <InputTxt>PHOTO TYPE</InputTxt>\r\n                    <PhotoTypeList>\r\n                        <WhiteBtn isClicked={uploadForm.photoType===0} onClick={(e)=>{onPhotoTypeHandler(e, 0);}}>일러스트</WhiteBtn>\r\n                        <WhiteBtn isClicked={uploadForm.photoType===1} onClick={(e)=>{onPhotoTypeHandler(e, 1);}}>만화</WhiteBtn>\r\n                        <WhiteBtn isClicked={uploadForm.photoType===2} onClick={(e)=>{onPhotoTypeHandler(e, 2);}}>캘리그라피</WhiteBtn>\r\n                    </PhotoTypeList>\r\n                    \r\n                    <BlueBtn type=\"submit\" style={{ marginTop: 54, width: \"100%\"}}>작품 등록</BlueBtn>\r\n                </form>\r\n            </PageLayout>\r\n        </BottomLayout>\r\n        <Footer />\r\n    </>);\r\n}\r\nexport default PhotoUpload;",["256","257"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\photoAction.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\photoReducer.ts",["258"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\personal\\PersonalModify.tsx",["259","260","261","262","263","264"],"import React, {useEffect, useCallback, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'globalStyles';\r\nimport Header from 'component/Header';\r\nimport Category from 'component/Category';\r\n\r\nimport Footer from 'component/Footer';\r\nimport { useSelector } from 'react-redux';\r\nimport { SERVER_PATH } from 'config/path';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { InputBox, WhiteInputLabel, InputParagraphBox } from 'component/input';\r\nimport { BlueBtn } from 'component/button';\r\n\r\nimport { faCamera } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport defaultImg from 'img/defaultPersonalImg.png';\r\nimport { modifiedPersonalInfo } from 'redux/actions/userAction';\r\nimport { media } from 'component/customMediaQuery';\r\n\r\n\r\nconst TopLayout=styled.section`\r\n    padding: 20px 0;\r\n    border-bottom: 1px solid black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n`;\r\n\r\nconst BottomLayout=styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: #faf1f1;\r\n`;\r\n\r\nconst PageLayout=styled.form`\r\n    /* background: #ffffff; */\r\n    display:flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst UpperImgDropDownBox = styled.section`\r\n    width: 1000px;\r\n    height: 452px;\r\n    position:relative;\r\n\r\n    background: #C4C4C4;\r\n\r\n    line-height: 800px;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    ${media.tablet}{\r\n        width: 600px;\r\n        height: 300px;\r\n    }\r\n\r\n    ${media.phone}{\r\n        width: 320px;\r\n        height: 200px;\r\n    }\r\n`;\r\n\r\nconst PersonalImgBox = styled.article`\r\n    position: relative;\r\n    height: 150px;\r\n    width: 150px;\r\n    margin-top: 50px;\r\n    font-size: 2.2rem;\r\n\r\n    ${media.tablet}{\r\n        width: 130px;\r\n        height: 130px;\r\n    }\r\n\r\n    ${media.phone}{\r\n        width: 90px;\r\n        height: 90px;\r\n    }\r\n`;\r\n\r\nconst PersonalImg = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    border-radius: 75px;\r\n    object-fit: 'contain';\r\n    cursor: pointer;\r\n`;\r\n\r\nfunction PersonalModify(){\r\n\r\n    const userData = useSelector(state => state.user.auth);\r\n    // upper : 개인페이지 상단 이미지 경로, personal: 개인 페이지 160 x 160 원형 이미지 경로\r\n    const [upperPhoto, setUpperPhoto] = useState<{path:string, name:string}>({path:\"\", name:\"\"});\r\n    const [preUpperPhoto, setPreUpperPhoto] = useState<{path:string, name:string}>({path:\"\", name:\"\"});\r\n\r\n    const [personalPhoto, setPersonalPhoto] = useState<{path:string, name:string}>({path:\"\", name:\"\"});\r\n    const [prePersonalPhoto, setPrePersonalPhoto] = useState<{path:string, name:string}>({path:\"\", name:\"\"});\r\n    \r\n    const [authorName, setAuthorName] = useState<string>(\"\");\r\n    const [instruction, setInstruction] = useState<string>(\"\");\r\n    const [homepage, setHomepage] = useState<string>(\"\");\r\n    const [twitter, setTwitter] = useState<string>(\"\");\r\n\r\n\r\n    const history = useHistory();\r\n    \r\n    // 프로필 변경 페이지에서 현재 자신의 프로필 내용 상태변수에 넣는다.\r\n    useEffect(() => {\r\n        setAuthorName(userData?.authorName);\r\n        setInstruction(userData?.instruction);\r\n        setHomepage(userData?.homepage);\r\n        setTwitter(userData?.twitter);\r\n\r\n        setUpperPhoto({path:userData?.upperImgPath, name:userData?.upperImgName});\r\n        setPreUpperPhoto({path:userData?.upperImgPath, name:userData?.upperImgName});\r\n        setPersonalPhoto({path:userData?.personalImgPath, name:userData?.personalImgName});\r\n        setPrePersonalPhoto({path:userData?.personalImgPath, name:userData?.personalImgName});\r\n    }, [])\r\n\r\n    // react dropzone library\r\n    const onDrop = useCallback(acceptedFiles => {\r\n\r\n        const formData = new FormData();\r\n        const config = {\r\n            headers: { 'Content-type': 'multipart/form-data' }\r\n        };\r\n        formData.append(\"file\", acceptedFiles[0]);\r\n\r\n        // 파일 확장자를 통해, 불러온 파일이 이미지 파일인지 여부를 확인한다.\r\n        const ext = acceptedFiles[0].name.split('.')[acceptedFiles[0].name.split('.').length - 1];\r\n        if([\"jpg\", \"png\", \"jpeg\", \"svg\"].includes(ext)){\r\n\r\n            // 서버로 이미지 임시 저장\r\n            axios.post('/api/photo/upload', formData, config)\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    // 임시 이미지가 저장 되면 이미지 이름과 서버 임시 path를 set함\r\n                    setUpperPhoto({...upperPhoto, path:response.data.filePath, name:response.data.fileName});\r\n                }\r\n            })\r\n            .catch(e => console.log(e));\r\n        }\r\n        else{\r\n            // 이미지 파일이 아닐 경우.\r\n            console.log(ext);\r\n            return alert(\"이미지 파일을 선택해주세요.\");\r\n        }\r\n    }, []);\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\r\n\r\n    // set user author name \r\n    const onAuthorNameHandler = (e: React.ChangeEvent<HTMLInputElement>) => { setAuthorName(e.target.value); };\r\n\r\n    // set user instruction\r\n    const onInstructionHandler = (e:React.ChangeEvent<HTMLTextAreaElement>) => { setInstruction(e.target.value); };\r\n\r\n    // set user personal home page\r\n    const onHompageHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setHomepage(e.target.value); };\r\n\r\n    // set user twitter page\r\n    const onTwitterHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setTwitter(e.target.value); };\r\n\r\n    const onPersonalImgHandler = (e:any) => {\r\n        const fileData = e.target.files[0];\r\n        const formData = new FormData();\r\n        const config = {\r\n            headers: { 'Content-type': 'multipart/form-data' }\r\n        };\r\n        formData.append(\"file\", fileData);\r\n\r\n        // 파일 확장자를 통해, 불러온 파일이 이미지 파일인지 여부를 확인한다.\r\n        const ext = fileData.name.split('.')[fileData.name.split('.').length - 1];\r\n        if([\"jpg\", \"png\", \"jpeg\", \"svg\"].includes(ext)){\r\n\r\n            // 서버로 이미지 임시 저장\r\n            axios.post('/api/photo/upload', formData, config)\r\n            .then(response => {\r\n                if(response.data.success){\r\n                    // 임시 이미지가 저장 되면 이미지 이름과 서버 임시 path를 set함\r\n                    setPersonalPhoto({...personalPhoto, path:response.data.filePath, name:response.data.fileName});\r\n                }\r\n            })\r\n            .catch(e => console.log(e));\r\n        }\r\n        else{\r\n            // 이미지 파일이 아닐 경우.\r\n            console.log(ext);\r\n            return alert(\"이미지 파일을 선택해주세요.\");\r\n        }\r\n    };\r\n\r\n    // 프로필 변경 내용 서버로 전송\r\n    const onPersonalDataSubmit = (e:React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        if(!authorName) return alert(\"작가 명을 입력해주세요.\");\r\n        if(authorName.length < 2) return alert(\"작가 명은 2글자 이상입니다.\");\r\n\r\n        // 서버로 보낼 데이터\r\n        const body = {\r\n            authorName,\r\n            instruction,\r\n            upperPhoto,\r\n            preUpperPhoto,\r\n            personalPhoto,\r\n            prePersonalPhoto,\r\n            twitter,\r\n            homepage,\r\n        };\r\n\r\n        modifiedPersonalInfo(body).then(\r\n            response => {\r\n                // 데이터 변경 사항이 success 되면 개인 페이지로 이동\r\n                if(response.payload.success){\r\n                    history.push(`/personal/${userData.key}`);\r\n                }else{\r\n                    alert(\"작가명이 중복됩니다.\");\r\n                }\r\n            });\r\n    };\r\n\r\n    // 프로필 이미지\r\n    const personalImg = () => {\r\n        if(personalPhoto?.path){\r\n            // 사용자가 이미지를 변경했다면\r\n            return `${SERVER_PATH}${personalPhoto?.path}`;\r\n        }\r\n        else{\r\n            // 사용자가 이미지를 변경하지 않았거나 default 값일 경우\r\n            return !personalPhoto?.path ? defaultImg : `${SERVER_PATH}${personalPhoto?.path}`;\r\n        }\r\n    };\r\n\r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n        <TopLayout>\r\n            <Header userData={userData}/>\r\n        </TopLayout>\r\n        <BottomLayout>\r\n            <PageLayout onSubmit={onPersonalDataSubmit}>\r\n                {/* // 여기서부터 페이지 내용 */}\r\n                {/* 상단 이미지 drop box 영역 */}\r\n                <UpperImgDropDownBox {...getRootProps()}>\r\n                    <input defaultValue={undefined} style={{width: '100%', height: '100%'}} {...getInputProps()} />\r\n                    {upperPhoto?.path ? \r\n                    <img style={{ position:'absolute', top:0, left:0, width: '100%', height: '100%', objectFit: 'contain', zIndex:5}} src={`${SERVER_PATH}${upperPhoto?.path}` }/> :\r\n                    <p style={{position:'absolute', top:0, left:0, zIndex: 7, width: '100%', height: '100%'}}> 클릭하거나 이미지를 끌어와 주세요 </p>}\r\n                </UpperImgDropDownBox>\r\n\r\n                {/* Personal Img 변경 영역 */}\r\n                <PersonalImgBox >\r\n                    <PersonalImg src={personalImg() } />\r\n                    <FontAwesomeIcon style={{ position:'absolute', right:0, bottom: 0, zIndex:3, color:\"#00A0FF\" }} icon={faCamera}/>\r\n                    <label style={{position:'absolute', width: \"100%\", height: \"100%\", top:0, left:0, zIndex:5, borderRadius: 75, cursor:\"pointer\"}}>\r\n                        <input \r\n                        style={{opacity: 0}} \r\n                        type=\"file\" \r\n                        accept=\"image/png, image/jpeg, image/jpg, image/svg\" \r\n                        onChange={onPersonalImgHandler}/>\r\n                    </label>\r\n                </PersonalImgBox>\r\n\r\n                <WhiteInputLabel>작가 명</WhiteInputLabel>\r\n                <InputBox value={authorName} onChange={onAuthorNameHandler} maxLength={16}/>\r\n\r\n                <WhiteInputLabel>개인 홈페이지 주소</WhiteInputLabel>\r\n                <InputBox value={homepage} onChange={onHompageHandler} maxLength={50}/>\r\n\r\n                <WhiteInputLabel>트위터 주소</WhiteInputLabel>\r\n                <InputBox value={twitter} onChange={onTwitterHandler} maxLength={50}/>\r\n\r\n                <WhiteInputLabel>자기 소개</WhiteInputLabel>\r\n                <InputParagraphBox value={instruction} onChange={onInstructionHandler} maxLength={120}/>\r\n\r\n                <BlueBtn type=\"submit\" style={{ margin:\"60px 0px\", width: \"99%\" }}> 수정 완료 </BlueBtn>                \r\n            </PageLayout>\r\n        </BottomLayout>\r\n        <Footer />\r\n        \r\n    </>);\r\n}\r\nexport default PersonalModify;","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\personalAction.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\Test.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\config\\path.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\upload\\PhotoModify.tsx",["265","266","267"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\commentAction.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\commentReducer.ts",["268"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\photo\\material\\PhotoRecommendBox.tsx",["269"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\search\\SearchPage.tsx",["270"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'globalStyles';\r\nimport { useParams } from 'react-router-dom';\r\nimport Header from 'component/Header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SearchList from 'page/search/material/SearchList';\r\nimport { searchPhoto, searchTag } from 'redux/actions/photoAction';\r\nimport { searchAuthor } from 'redux/actions/userAction';\r\nimport Footer from 'component/Footer';\r\n\r\nconst Whole=styled.section``;\r\n\r\nconst TopLayout=styled.section`\r\n    padding: 20px 0;\r\n    border-bottom: 1px solid black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst BottomLayout=styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: #faf1f1;\r\n`;\r\n\r\nconst PageLayout=styled.section`\r\n    height: 80%;\r\n    background: #ffffff;\r\n    padding-bottom: 95px;\r\n`;\r\n\r\nconst Loading = styled.article`\r\n    padding : 7px 24px;\r\n\r\n    position: fixed;\r\n    top: 50vh;\r\n    background: #00a0ff;\r\n    \r\n    color: #ffffff;\r\n    font-size: 2rem;\r\n    font-weight: 900;\r\n    border-radius: 22px;\r\n    /* border: 1px solid; */\r\n`;\r\n\r\nconst LoadingCircle = styled.div<{delay:number}>`\r\n    position: absolute;\r\n    top: 0px;\r\n    left: -36px;\r\n    width: 30px;\r\n    height: 100%;\r\n\r\n    background: #ffffff;\r\n    animation: loading 2s infinite ease;\r\n    animation-delay: ${props=> props.delay}s;\r\n    /* border: 1px solid black; */\r\n\r\n    @keyframes loading{\r\n        0%{\r\n            transform: translateX(-20px);\r\n        }\r\n        100%{\r\n            transform: translateX(250px);\r\n        }\r\n    }\r\n`;\r\n\r\n// 검색 결과 화면 컴포넌트\r\nfunction SearchPage(){\r\n    const {text} = useParams<{text:string}>();\r\n    const userData = useSelector(state => state.user.auth);\r\n    const dispatch = useDispatch();\r\n    const [searchPhotoList, setSearchPhotoList] = useState<any>(null);\r\n    const [searchAuthorList, setSearchAuthorList] = useState<any>(null);\r\n    const [searchTagList, setSearchTagList] = useState<any>(null);\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);                          // loading 여부 확인\r\n\r\n    useEffect(() => {\r\n        // setIsLoading(0);\r\n        searchPhoto(text).then(\r\n            response=> {\r\n                if(response.payload.success) setSearchPhotoList(response.payload.result);\r\n                dispatch(response);\r\n            });\r\n\r\n        searchAuthor(text).then(\r\n            response=> {\r\n                if(response.payload.success) setSearchAuthorList(response.payload.result);\r\n                dispatch(response);\r\n            });\r\n\r\n        searchTag(text).then(\r\n            response=> {\r\n                if(response.payload.success) setSearchTagList(response.payload.result);\r\n                dispatch(response);\r\n                setIsLoading(true);\r\n                \r\n            });\r\n\r\n    }, [text]);\r\n    \r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n        <Whole>\r\n            <TopLayout>\r\n                <Header userData={userData}/>\r\n            </TopLayout>\r\n            <BottomLayout>\r\n                \r\n                {/* 로딩 문구 */}\r\n                {!isLoading &&\r\n                <Loading>Loading...\r\n                    <LoadingCircle delay={0}/>\r\n                    <LoadingCircle delay={0.5}/>\r\n                    <LoadingCircle delay={1}/>\r\n                    <LoadingCircle delay={1.5}/>\r\n                </Loading>}\r\n                <PageLayout>\r\n                    {/* 여기서부터 Page 내용 */}\r\n\r\n                    {/* 검색 단어 관련 작가 리스트 */}\r\n                    <SearchList searchTxt={text} title={\"관련된 작가\"} data={searchAuthorList}/>\r\n\r\n                    {/* 검색 단어 관련 작품 리스트 */}\r\n                    <SearchList searchTxt={text} title={\"관련된 작품\"} data={searchPhotoList}/>\r\n\r\n                    {/* 검색 단어 관련 테그 리스트 */}\r\n                    <SearchList searchTxt={text} title={\"관련된 태그 작품\"} data={searchTagList} />\r\n                </PageLayout>\r\n            </BottomLayout>\r\n            <Footer />\r\n        </Whole>\r\n    </>);\r\n}\r\nexport default SearchPage;","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\search\\material\\SearchList.tsx",["271"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\FamousTagList.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\RandomTagStyle.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\LankingList.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\main\\material\\RecentWorkList.tsx",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\component\\customMediaQuery.ts",[],["272","273"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\findPassowrd\\FindPassord.tsx",["274","275"],"import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'globalStyles';\r\nimport {InputBox} from 'component/input';\r\nimport { VerifyBtn } from 'component/button';\r\nimport { getVerifiedCode, modifyPassword } from 'redux/actions/userAction';\r\nimport { useDispatch } from 'react-redux';\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from 'react-router-dom';\r\nimport {useHistory} from 'react-router';\r\nimport { media } from 'component/customMediaQuery';\r\nimport background from 'img/background.jpg';\r\n\r\nconst Whole=styled.section`\r\n    background-size: cover;\r\n\r\n    width: 100%;\r\n    height: 100vh;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst RegisterScreen = styled.div`\r\n    width: 508px;\r\n    height: 600px;\r\n    position: relative;\r\n\r\n    background: #FFFFFF;\r\n    border-radius: 8px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${media.phone}{\r\n        width: 310px;\r\n        height: 440px;\r\n    }\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n    position: absolute;\r\n    top: 30px;\r\n    left: 30px;\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst RegisterBox = styled.article`\r\n    width: 74%;\r\n    height: 63.3%;\r\n    padding: 90px 0 49px;\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    ${media.phone}{\r\n        width: 88%;\r\n        padding: 80px 0 49px;\r\n    }\r\n`;\r\n\r\nconst SiteTitle=styled.h1`\r\n    margin-bottom: 3.5rem;\r\n    font-weight: 800;\r\n    font-size: 42px;\r\n    color: #00A0FF;\r\n\r\n    ${media.phone}{\r\n        margin-bottom: 2.5rem;\r\n        font-size: 32px;\r\n    }\r\n`;\r\n\r\nconst RegisterForm=styled.form`\r\n    width: 100%;\r\n    padding: 27px 0 40px;\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    background: #daf8ff;\r\n    border-radius: 8px;\r\n`;\r\n\r\nconst initRegisterForm = {\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n};\r\n\r\n//  비밀번호 찾는 페이지 컴포넌트\r\nfunction FindPassword(){\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [registerForm, setRegisterForm] = useState(initRegisterForm);         // 비밀번호 찾기 폼 상태 변수\r\n\r\n    const [isVerified, setIsVerified] = useState<number>(0);                    // 0: 인증 넘버 아직 수신 전 ,  1: 인증 넘버 수신 받음,  2: 인증 완료\r\n    const [verifiedCode, setVerifiedCode] = useState<string>();                 // 사용자가 입력한 인증번호\r\n    const [checkVerifiedCode, setCheckVerifiedCode] = useState<string>();       // 서버에서 받아온 인증번호\r\n\r\n    //이메일 형식 체크\r\n    const emailCheck = (email:string):boolean => {\r\n        const emailRegex = /^(([^<>()\\[\\].,;:\\s@\"]+(\\.[^<>()\\[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n        if(!emailRegex.test(email)) return false;\r\n        return true;\r\n    };\r\n\r\n    // email, password, 2차 password, authorname state 저장\r\n    const onEmailHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setRegisterForm({...registerForm, email: e.target.value}); };\r\n    const onPasswordHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setRegisterForm({...registerForm, password: e.target.value}); };\r\n    const onConfirmPasswordHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setRegisterForm({...registerForm, confirmPassword: e.target.value}); };\r\n    const onVerifiedCodeHandler = (e:React.ChangeEvent<HTMLInputElement>) => { setVerifiedCode(e.target.value);  };\r\n\r\n    // 인증 번호를 보낸다.\r\n    const onSendVerifiedNumberHandler = (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) => { \r\n        e.preventDefault();\r\n        if(!emailCheck(registerForm.email)) return alert('이메일 형식이 아닙니다.');\r\n\r\n        setIsVerified(1);\r\n\r\n        getVerifiedCode({email: registerForm.email, str: \"비밀번호 찾기\"}).then(\r\n        response=> {\r\n            if(response.payload.success) setCheckVerifiedCode(response.payload.verificationNumber.toString());\r\n        });\r\n\r\n        return alert('인증 번호가 발송되었습니다.');\r\n    };\r\n\r\n    // 유저가 입력한 인증번호와 서버에서 받은 인증번호를 체크한다.\r\n    const onCheckVerifiedNumberHandler = (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n        \r\n        // 인증 실패\r\n        if(checkVerifiedCode !== verifiedCode) {\r\n            setVerifiedCode(\"\");\r\n            return alert('인증 번호가 일치하지 않습니다.')\r\n        };\r\n\r\n        setIsVerified(2);           // 인증 완료\r\n    }\r\n\r\n    // 비밀번호 변경 양식 서버로 제출\r\n    const onSubmitHandler = (e:any) => {\r\n        e.preventDefault();\r\n\r\n        if(isVerified !== 2) return alert('이메일 인증을 진행해주십시오.');\r\n        // 이메일 형식 확인\r\n        if(!emailCheck(registerForm.email)) return alert('이메일 형식이 아닙니다.');\r\n        // password 양식 확인\r\n        if(registerForm.password.length < 8) return alert('비밀번호는 최소 8자여야합니다.');\r\n        if(registerForm.password !== registerForm.confirmPassword) return alert('비밀번호와 비밀번호 확인은 같아야합니다.');\r\n\r\n        const body = {\r\n            email : registerForm.email,\r\n            password : registerForm.password,\r\n        };\r\n\r\n        // 비밀번호 변경 api\r\n        modifyPassword(body)\r\n        .then(response => {\r\n            if (response.payload.success) {\r\n                dispatch(response);\r\n                history.push(\"/login\");\r\n            }\r\n        });\r\n    };\r\n\r\n    // 인증 단계에 따른 인증버튼 UI 바꾸는 함수\r\n    const VerifyUI = () => {\r\n        if(isVerified === 0) {\r\n            return <VerifyBtn type=\"button\" onClick={onSendVerifiedNumberHandler}>인증번호 받기</VerifyBtn>;\r\n        }\r\n        else if(isVerified === 1) {\r\n            return  <VerifyBtn type=\"button\" onClick={onCheckVerifiedNumberHandler}>인증번호 확인</VerifyBtn>;\r\n        }\r\n        else{\r\n            return <VerifyBtn type=\"button\" >확인 완료</VerifyBtn>;\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <GlobalStyle />\r\n\r\n        <Whole style={{backgroundImage:`url(${background})`}}>\r\n            <RegisterScreen>\r\n                {/* 이전 로그인 창으로 가는 버튼 */}\r\n                <IconBox>\r\n                    <Link to=\"/login\">\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n                    </Link>\r\n                </IconBox>\r\n                {/* 비밀번호 찾기 양식 */}\r\n                <RegisterBox>\r\n                    <SiteTitle>Newone</SiteTitle>\r\n                    <RegisterForm onSubmit={onSubmitHandler}>\r\n\r\n                        <InputBox style={{width:\"80%\"}} placeholder=\"이메일\" value={registerForm.email} onChange={onEmailHandler}/>\r\n                        <div style={{display: \"flex\", width:\"80%\" }}>\r\n                            <InputBox defaultValue={\"\"} onChange={onVerifiedCodeHandler} style={{width:\"57%\"}} placeholder=\"이메일 인증번호\" />\r\n                            {VerifyUI()}\r\n                        </div>\r\n\r\n                        {isVerified === 2 &&\r\n                        <>\r\n                            <InputBox style={{width:\"80%\"}} placeholder=\"재설정 비밀번호\" defaultValue={\"\"} onChange={onPasswordHandler} maxLength={16} type=\"password\"/>\r\n                            <InputBox style={{width:\"80%\"}} placeholder=\"비밀번호 확인\" defaultValue={\"\"} onChange={onConfirmPasswordHandler} maxLength={16} type=\"password\"/>\r\n                            <VerifyBtn style={{width:\"80%\"}} type=\"submit\">비밀번호 재설정하기</VerifyBtn>\r\n                        </>\r\n                        }\r\n                        \r\n                    </RegisterForm>\r\n                </RegisterBox>\r\n            </RegisterScreen>\r\n        </Whole>\r\n    </>);\r\n}\r\nexport default FindPassword;","C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\Admin.tsx",["276","277"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\reducers\\adminReducer.ts",["278"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\component\\data.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\component\\graphMaker.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\redux\\actions\\adminAction.ts",[],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\admin\\component\\AdminDataList.tsx",["279","280"],"C:\\Users\\yoon\\Desktop\\STUDY\\17_FE\\1_Project\\6_newone\\client\\src\\page\\upload\\component\\UploadUI.tsx",[],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":76,"column":8,"nodeType":"287","endLine":76,"endColumn":18,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":219,"column":38,"nodeType":"291","endLine":219,"endColumn":53},{"ruleId":"289","severity":1,"message":"290","line":220,"column":38,"nodeType":"291","endLine":220,"endColumn":53},{"ruleId":"292","severity":1,"message":"293","line":186,"column":45,"nodeType":"294","messageId":"295","endLine":186,"endColumn":47},{"ruleId":"285","severity":1,"message":"296","line":57,"column":8,"nodeType":"287","endLine":57,"endColumn":29,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":4,"column":8,"nodeType":"300","messageId":"301","endLine":4,"endColumn":16},{"ruleId":"285","severity":1,"message":"302","line":132,"column":8,"nodeType":"287","endLine":132,"endColumn":15,"suggestions":"303"},{"ruleId":"304","severity":1,"message":"305","line":146,"column":25,"nodeType":"306","endLine":146,"endColumn":164},{"ruleId":"285","severity":1,"message":"286","line":85,"column":8,"nodeType":"287","endLine":85,"endColumn":14,"suggestions":"307"},{"ruleId":"285","severity":1,"message":"308","line":210,"column":8,"nodeType":"287","endLine":210,"endColumn":82,"suggestions":"309"},{"ruleId":"292","severity":1,"message":"293","line":226,"column":82,"nodeType":"294","messageId":"295","endLine":226,"endColumn":84},{"ruleId":"310","severity":1,"message":"311","line":158,"column":38,"nodeType":"312","messageId":"313","endLine":158,"endColumn":39,"suggestions":"314"},{"ruleId":"310","severity":1,"message":"311","line":158,"column":61,"nodeType":"312","messageId":"313","endLine":158,"endColumn":62,"suggestions":"315"},{"ruleId":"281","replacedBy":"316"},{"ruleId":"283","replacedBy":"317"},{"ruleId":"310","severity":1,"message":"311","line":111,"column":38,"nodeType":"312","messageId":"313","endLine":111,"endColumn":39,"suggestions":"318"},{"ruleId":"310","severity":1,"message":"311","line":111,"column":61,"nodeType":"312","messageId":"313","endLine":111,"endColumn":62,"suggestions":"319"},{"ruleId":"320","severity":1,"message":"321","line":17,"column":1,"nodeType":"322","endLine":59,"endColumn":2},{"ruleId":"320","severity":1,"message":"321","line":6,"column":1,"nodeType":"322","endLine":47,"endColumn":2},{"ruleId":"298","severity":1,"message":"323","line":2,"column":8,"nodeType":"300","messageId":"301","endLine":2,"endColumn":14},{"ruleId":"285","severity":1,"message":"324","line":62,"column":8,"nodeType":"287","endLine":62,"endColumn":10,"suggestions":"325"},{"ruleId":"298","severity":1,"message":"326","line":64,"column":41,"nodeType":"300","messageId":"301","endLine":64,"endColumn":53},{"ruleId":"281","replacedBy":"327"},{"ruleId":"283","replacedBy":"328"},{"ruleId":"320","severity":1,"message":"321","line":20,"column":1,"nodeType":"322","endLine":70,"endColumn":2},{"ruleId":"298","severity":1,"message":"329","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":16},{"ruleId":"298","severity":1,"message":"330","line":18,"column":10,"nodeType":"300","messageId":"301","endLine":18,"endColumn":21},{"ruleId":"285","severity":1,"message":"331","line":129,"column":8,"nodeType":"287","endLine":129,"endColumn":10,"suggestions":"332"},{"ruleId":"285","severity":1,"message":"333","line":159,"column":8,"nodeType":"287","endLine":159,"endColumn":10,"suggestions":"334"},{"ruleId":"298","severity":1,"message":"326","line":161,"column":41,"nodeType":"300","messageId":"301","endLine":161,"endColumn":53},{"ruleId":"335","severity":1,"message":"336","line":259,"column":21,"nodeType":"306","endLine":259,"endColumn":179},{"ruleId":"285","severity":1,"message":"337","line":62,"column":8,"nodeType":"287","endLine":62,"endColumn":10,"suggestions":"338"},{"ruleId":"285","severity":1,"message":"339","line":99,"column":8,"nodeType":"287","endLine":99,"endColumn":10,"suggestions":"340"},{"ruleId":"298","severity":1,"message":"326","line":101,"column":41,"nodeType":"300","messageId":"301","endLine":101,"endColumn":53},{"ruleId":"320","severity":1,"message":"321","line":9,"column":1,"nodeType":"322","endLine":28,"endColumn":2},{"ruleId":"298","severity":1,"message":"341","line":4,"column":10,"nodeType":"300","messageId":"301","endLine":4,"endColumn":17},{"ruleId":"285","severity":1,"message":"286","line":103,"column":8,"nodeType":"287","endLine":103,"endColumn":14,"suggestions":"342"},{"ruleId":"298","severity":1,"message":"343","line":5,"column":8,"nodeType":"300","messageId":"301","endLine":5,"endColumn":18},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"310","severity":1,"message":"311","line":111,"column":38,"nodeType":"312","messageId":"313","endLine":111,"endColumn":39,"suggestions":"344"},{"ruleId":"310","severity":1,"message":"311","line":111,"column":61,"nodeType":"312","messageId":"313","endLine":111,"endColumn":62,"suggestions":"345"},{"ruleId":"298","severity":1,"message":"346","line":81,"column":12,"nodeType":"300","messageId":"301","endLine":81,"endColumn":23},{"ruleId":"285","severity":1,"message":"347","line":242,"column":8,"nodeType":"287","endLine":242,"endColumn":10,"suggestions":"348"},{"ruleId":"320","severity":1,"message":"321","line":10,"column":1,"nodeType":"322","endLine":32,"endColumn":2},{"ruleId":"292","severity":1,"message":"349","line":146,"column":100,"nodeType":"350","messageId":"351","endLine":146,"endColumn":108},{"ruleId":"292","severity":1,"message":"349","line":147,"column":99,"nodeType":"350","messageId":"351","endLine":147,"endColumn":107},"no-native-reassign",["352"],"no-negated-in-lhs",["353"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["354"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'match.id'. Either include it or remove the dependency array.",["355"],"@typescript-eslint/no-unused-vars","'upperImg' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'match.id', 'photoInfo?._id', and 'photoInfo?.tagList'. Either include them or remove the dependency array.",["356"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["357"],"React Hook useEffect has missing dependencies: 'commentList' and 'dispatch'. Either include them or remove the dependency array.",["358"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["359","360"],["361","362"],["352"],["353"],["363","364"],["365","366"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'styled' is defined but never used.","React Hook useCallback has a missing dependency: 'photoForm'. Either include it or remove the dependency array. You can also do a functional update 'setPhotoForm(p => ...)' if you only need 'photoForm' in the 'setPhotoForm' call.",["367"],"'isDragActive' is assigned a value but never used.",["352"],["353"],"'Category' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'userData?.authorName', 'userData?.homepage', 'userData?.instruction', 'userData?.personalImgName', 'userData?.personalImgPath', 'userData?.twitter', 'userData?.upperImgName', and 'userData?.upperImgPath'. Either include them or remove the dependency array.",["368"],"React Hook useCallback has a missing dependency: 'upperPhoto'. Either include it or remove the dependency array. You can also do a functional update 'setUpperPhoto(u => ...)' if you only need 'upperPhoto' in the 'setUpperPhoto' call.",["369"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'disPatch', 'photoData?.id', 'photoForm', and 'uploadForm'. Either include them or remove the dependency array. You can also do a functional update 'setUploadForm(u => ...)' if you only need 'uploadForm' in the 'setUploadForm' call.",["370"],"React Hook useCallback has missing dependencies: 'photoForm.photoName', 'photoForm.photoPath', and 'uploadForm'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPhotoForm' needs the current value of 'uploadForm'.",["371"],"'BlueBtn' is defined but never used.",["372"],"'defaultImg' is defined but never used.",["373","374"],["375","376"],"'visitorData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'drawGraph'. Either include them or remove the dependency array.",["377"],"Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation",{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"messageId":"388","fix":"389","desc":"390"},{"messageId":"391","fix":"392","desc":"393"},{"messageId":"388","fix":"394","desc":"390"},{"messageId":"391","fix":"395","desc":"393"},{"messageId":"388","fix":"396","desc":"390"},{"messageId":"391","fix":"397","desc":"393"},{"messageId":"388","fix":"398","desc":"390"},{"messageId":"391","fix":"399","desc":"393"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"messageId":"388","fix":"412","desc":"390"},{"messageId":"391","fix":"413","desc":"393"},{"messageId":"388","fix":"414","desc":"390"},{"messageId":"391","fix":"415","desc":"393"},{"desc":"416","fix":"417"},"Update the dependencies array to be: [category, dispatch]",{"range":"418","text":"419"},"Update the dependencies array to be: [match.id, status.deletePhoto]",{"range":"420","text":"421"},"Update the dependencies array to be: [dispatch, history, isNew, match.id, photoInfo?._id, photoInfo?.tagList]",{"range":"422","text":"423"},"Update the dependencies array to be: [_key, dispatch]",{"range":"424","text":"425"},"Update the dependencies array to be: [photoInfo?._id, commentStatus.deleteComment, commentStatus.modifyComment, dispatch, commentList]",{"range":"426","text":"427"},"removeEscape",{"range":"428","text":"429"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"430","text":"431"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"432","text":"429"},{"range":"433","text":"431"},{"range":"434","text":"429"},{"range":"435","text":"431"},{"range":"436","text":"429"},{"range":"437","text":"431"},"Update the dependencies array to be: [photoForm]",{"range":"438","text":"439"},"Update the dependencies array to be: [userData?.authorName, userData?.homepage, userData?.instruction, userData?.personalImgName, userData?.personalImgPath, userData?.twitter, userData?.upperImgName, userData?.upperImgPath]",{"range":"440","text":"441"},"Update the dependencies array to be: [upperPhoto]",{"range":"442","text":"443"},"Update the dependencies array to be: [disPatch, photoData?.id, photoForm, uploadForm]",{"range":"444","text":"445"},"Update the dependencies array to be: [photoForm.photoName, photoForm.photoPath, uploadForm]",{"range":"446","text":"447"},"Update the dependencies array to be: [dispatch, text]",{"range":"448","text":"449"},{"range":"450","text":"429"},{"range":"451","text":"431"},{"range":"452","text":"429"},{"range":"453","text":"431"},"Update the dependencies array to be: [dispatch, drawGraph]",{"range":"454","text":"455"},[2589,2599],"[category, dispatch]",[1677,1698],"[match.id, status.deletePhoto]",[3982,3989],"[dispatch, history, isNew, match.id, photoInfo?._id, photoInfo?.tagList]",[2133,2139],"[_key, dispatch]",[5547,5621],"[photoInfo?._id, commentStatus.deleteComment, commentStatus.modifyComment, dispatch, commentList]",[3288,3289],"",[3288,3288],"\\",[3311,3312],[3311,3311],[2684,2685],[2684,2684],[2707,2708],[2707,2707],[2268,2270],"[photoForm]",[3794,3796],"[userData?.authorName, userData?.homepage, userData?.instruction, userData?.personalImgName, userData?.personalImgPath, userData?.twitter, userData?.upperImgName, userData?.upperImgPath]",[4867,4869],"[upperPhoto]",[2353,2355],"[disPatch, photoData?.id, photoForm, uploadForm]",[3771,3773],"[photoForm.photoName, photoForm.photoPath, uploadForm]",[2941,2947],"[dispatch, text]",[2787,2788],[2787,2787],[2810,2811],[2810,2810],[7362,7364],"[dispatch, drawGraph]"]